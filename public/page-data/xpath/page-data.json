{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/xpath",
    "result": {"data":{"strapiArticles":{"id":"Articles_541","title":"学习XPath，从这里开始！","description":"XPath 是W3C 指定的标准语言，用于提取 XML、HTML等文档中的信息。\n\n- XPath 没有使用 XML 语法，而是使用路径标识符 + 层级结构来查找文档中的信息；\n- JavaScript中可替代  document.getElementById 方法、 element.childNodes 属性等DOM操作；\n- 不同浏览器对 XPath 的支持差别很大，可以使用 [js-xpath](https://nchc.dl.sourceforge.net/project/js-xpath/js-xpath/1.0.0/xpath.js) 或 [wicked-good-xpath](https://github.com/google/wicked-good-xpath) 实现对主流浏览器的兼容。","content":"\n\n##### 一、XPath 是什么？\n\nXPath 是W3C 指定的标准语言，用于提取 XML、HTML等文档中的信息。\n\n- XPath 没有使用 XML 语法，而是使用路径标识符 + 层级结构来查找文档中的信息；\n- JavaScript中可替代  document.getElementById 方法、 element.childNodes 属性等DOM操作；\n\n- 不同浏览器对 XPath 的支持差别很大，可以使用 [js-xpath](https://nchc.dl.sourceforge.net/project/js-xpath/js-xpath/1.0.0/xpath.js) 或 [wicked-good-xpath](https://github.com/google/wicked-good-xpath) 实现对主流浏览器的兼容。\n\n---\n\n##### 二、术语\n\n在 XPath 中，有七种类型的节点：文档（根）节点、元素、属性、文本、命名空间、处理指令、注释。\n\n```xml\n<?xml version=\"1.0\" encoding=\"ISO-8859-1\"?>\n\n<bookstore>\n    <book>\n        <title lang=\"en\">Harry Potter</title>\n        <author>J K. Rowling</author>\n        <year>2005</year>\n        <price>29.99</price>\n    </book>\n</bookstore>\n```\n\n|名称|实例|\n|-|-|\n|文档节点（根节点）|`<bookstore>`|\n|元素|`<author>J K. Rowling</author>`|\n|属性|lang=\"en\"|\n|文本|J K. Rowling|\n\n---\n\n##### 三、语法\n\n`特殊标识符` + `节点名称`  构成了XPath语法。\n\n###### 1、常用表达式\n\n| 表达式   | 描述                       |\n| :------- | :------------------------- |\n| nodename | 表示 nodename 的所有子节点 |\n| /        | 表示根节点                 |\n| //       | 表示所有指定节点           |\n| .        | 当前节点                   |\n| ..       | 当前节点的父节点           |\n| @        | 节点属性                   |\n| *      | 匹配任何元素节点   |\n| @*     | 匹配任何属性节点   |\n| node() | 匹配任何类型的节点 |\n|绝对路径|/step/step/...|\n|相对链接|step/step/...|\n\n---\n\n###### 2、Axes\n\nAxes 用于定位当前节点的节点集，语法格式：`Axes关键词::节点` 。\n\n\n|Axes关键词|描述|\n|-|-|\n| ancestor           | 选取当前节点的所有先辈（父、祖父等）                   |\n| ancestor-or-self   | 选取当前节点的所有先辈（父、祖父等）以及当前节点本身   |\n| attribute          | 选取当前节点的所有属性                                 |\n| child              | 选取当前节点的所有子元素                               |\n| descendant         | 选取当前节点的所有后代元素（子、孙等）                 |\n| descendant-or-self | 选取当前节点的所有后代元素（子、孙等）以及当前节点本身 |\n| following          | 选取文档中当前节点的结束标签之后的所有节点             |\n| namespace          | 表示当前节点的所有命名空间节点                       |\n| parent             | 表示当前节点的父节点                                 |\n| preceding          | 表示文档中当前节点的开始标签之前的所有节点           |\n| preceding-sibling  | 表示当前节点之前的所有同级节点                       |\n| self               | 表示当前节点                                         |\n\n| 示例                   | 结果                                                         |\n| :--------------------- | :----------------------------------------------------------- |\n| child::book            | 选取所有属于当前节点的子元素的 book 节点。                   |\n| attribute::lang        | 选取当前节点的 lang 属性。                                   |\n| child::*               | 选取当前节点的所有子元素。                                   |\n| attribute::*           | 选取当前节点的所有属性。                                     |\n| child::text()          | 选取当前节点的所有文本子节点。                               |\n| child::node()          | 选取当前节点的所有子节点。                                   |\n| descendant::book       | 选取当前节点的所有 book 后代。                               |\n| ancestor::book         | 选择当前节点的所有 book 先辈。                               |\n| ancestor-or-self::book | 选取当前节点的所有 book 先辈以及当前节点（如果此节点是 book 节点） |\n| child::*/child::price  | 选取当前节点的所有 price 孙节点。                            |\n\n\n---\n\n###### 3、运算符\n\n| 运算符 | 描述           | 实例                      | 返回值                                             |\n| :----- | :------------- | :------------------------ | :------------------------------------------------- |\n| \\|     | 计算两个节点集 | //book \\| //cd            | 返回所有拥有 book 和 cd 元素的节点集               |\n| +      | 加法           | 6 + 4                     | 10                                                 |\n| -      | 减法           | 6 - 4                     | 2                                                  |\n| *      | 乘法           | 6 * 4                     | 24                                                 |\n| div    | 除法           | 8 div 4                   | 2                                                  |\n| =      | 等于           | price=9.80                | price 等于 9.80，返回 true，否则返回 false         |\n| !=     | 不等于         | price!=9.80               | price 不等于 9.80，返回 true，否则返回 false       |\n| <      | 小于           | price<9.80                | price 小于 9.80，返回 true，否则返回 false         |\n| <=     | 小于或等于     | price<=9.80               | price 小于等于 9.80，返回 true，否则返回 false     |\n| >      | 大于           | price>9.80                | price 大于 9.80，返回 true，否则返回 false         |\n| >=     | 大于或等于     | price>=9.80               | price 大于等于 9.80，返回 true，否则返回 false     |\n| or     | 或             | price=9.80 or price=9.70  | price等于9.80或等于9.70，返回 true，否则返回 false |\n| and    | 与             | price>9.00 and price<9.90 | price大于9.00且小于9.90，返回 true，否则返回 false |\n| mod    | 计算除法的余数 | 5 mod 2                   | 1                                                  |\n\n---\n\n###### 4、内置函数\n\nW3C 定义了很多 XPath 内置函数。\n\n- [常见内置函数说明！](https://developer.mozilla.org/en-US/docs/Web/XPath/Functions)\n\n- 更多请参考 W3C 文档。[xpath-30  -  W3C](https://www.w3.org/TR/xpath-30/)\n\n---\n\n##### 四、常用实例\n\n\n| 表达式示例      | 结果                                  |\n| :-------------- | :------------------------------------ |\n| bookstore       | 选取 bookstore 的所有子元素         |\n| bookstore/book  | 选取 bookstore 的所有 book 子元素   |\n| bookstore//book | 选取 bookstore 后代中的所有 book 元素 |\n| /bookstore      | 选取根元素 bookstore                  |\n| /bookstore/* | 选取 bookstore 的所有子元素 |\n| /bookstore/book[1]                 | 选取 bookstore 的第一个 book 元素                            |\n| /bookstore/book[last()]            | 选取 bookstore 的最后一个 book 元素                          |\n| /bookstore/book[last()-1]          | 选取 bookstore 的倒数第二个 book 元素                        |\n| /bookstore/book[position()<3]      | 选取 bookstore 的前两个 book 元素                            |\n| /bookstore/book[price>35.00]       | 选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。 |\n| /bookstore/book[price>35.00]/title | 选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。 |\n| //book          | 选取文档中所有 book 子元素            |\n| //@lang         | 选取名为 lang 的所有属性              |\n| //title[@lang]                     | 选取包含 lang 属性的 title 元素                              |\n| //title[@lang='eng']               | 选取包含 lang='eng' 属性的 title 元素                        |\n| //*          | 选取文档中的所有元素。            |\n| //title[@*]  | 选取所有带有属性的 title 元素。   |\n| //book/title \\| //book/price     | 选取 book 元素的所有 title 和 price 元素。                   |\n| //title \\| //price               | 选取文档中的所有 title 和 price 元素。                       |\n| /bookstore/book/title \\| //price | 选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素。 |\n\n---\n\n##### 五、JavaScript 中使用 XPath\n\n- [Introduction_to_using_XPath_in_JavaScript](https://developer.mozilla.org/zh-CN/docs/Web/XPath/Introduction_to_using_XPath_in_JavaScript)\n\n\n---\n\n##### 六、参考文档\n\n- [XPath  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/XPath)\n- [xpath  -  W3C](https://www.w3.org/TR/xpath/)\n\n- [xpath_intro](https://www.w3school.com.cn/xpath/xpath_intro.asp)\n\n\n","url":"https://learn-anything.cn/xpath","author":null,"published_at":"2022-01-08T05:54:53.000Z","tags":[{"name":"xpath","slug":"xpath"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"学习XPath，从这里开始！","slug":"xpath"}},
    "staticQueryHashes": ["63159454"]}