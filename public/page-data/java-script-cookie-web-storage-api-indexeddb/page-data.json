{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-cookie-web-storage-api-indexeddb",
    "result": {"data":{"strapiArticles":{"id":"Articles_533","title":"除了缓存，浏览器还有哪些存储数据的方式？","description":"浏览器提供3种用于数据存储的 JavaScript APIs：cookie 、Web Storage API、IndexedDB。","content":"##### 一、简介\n\n浏览器提供3种用于数据存储的 JavaScript APIs：cookie 、Web Storage API、IndexedDB。\n\n---\n\n##### 二、cookie\n\ncookie 是最早期 用于存储 键/值对 数据的解决方案，但由于各种安全、无法存储复杂数据等问题，请使用另外两种方案。\n\n```js\n// cookie 使用方法\ndocument.cookie = \"name=oeschger\";\ndocument.cookie = \"favorite_food=tripe\";\nalert(document.cookie);\t// name=oeschger;favorite_food=tripe\n```\n\n---\n\n##### 三、Web Storage API\n\n浏览器提供 Web Storage API，能够存储  键/值对 数据，可完全替代 cookie 的存储解决方案。有两种使用场景：\n\n###### 1、Window.localStorage\n\n用于本地存储，浏览器关闭后，再重新打开数据依然可用。\n\n```html\n<!-- index.html -->\n<!DOCTYPE html>\n<html lang='zh-CN'>\n<head>\n    <meta charset=\"utf-8\">\n    <title>存储数据</title>\n    <script>\n        console.log(\"读取：\" + localStorage.getItem('bgcolor'));\n        localStorage.setItem('bgcolor', 'red');\n    </script>\n</head>\n<body>\n    <h1>打开 console 看输出结果！</h1>\n</body>\n</html>\n```\n\n---\n\n###### 2、Window.sessionStorage\n\n为每个网站建立一个独立存储区来存储数据，在页面会话结束时清除数据。\n\n```js\n// 保存数据到 sessionStorage\nsessionStorage.setItem('key', 'value');\n\n// 从 sessionStorage 获取数据\nlet data = sessionStorage.getItem('key');\n\n// 从 sessionStorage 删除保存的数据\nsessionStorage.removeItem('key');\n\n// 从 sessionStorage 删除所有保存的数据\nsessionStorage.clear();\n```\n\n---\n\n##### 四、IndexedDB_API \n\nIndexedDB 用于在客户端存储大量的结构化数据（也包括文件/二进制大型对象（blobs）），使用索引实现高性能搜索。IndexedDB采用异步操作，避免阻塞应用程序。\n\n###### 1、扩展库\n\nIndexedDB API 功能强大但过于复杂，可使用下面扩展库 降低开发难度。\n\n|名称|作用|\n|-|-|\n|[localForage](https://localforage.docschina.org/)|把 IndexedDB、WebSQL、localStorage 封装成统一接口，如果浏览器不支持 IndexedDB 就退到  WebSQL 或 localStorage，保证存储功能的可用性。所有主流浏览器中都可用：Chrome，Firefox，IE 和 Safari（包括 Safari Mobile）。|\n|[Dexie.js](https://www.dexie.org/)|IndexedDB 的扩展库，简单易用。|\n|[ZangoDB](https://github.com/erikolson186/zangodb)|类似 MongoDB 的 IndexedDB 接口，支持 MongoDB 的大多数熟悉的过滤、投影、排序、更新和聚合功能。|\n|[JsStore](https://jsstore.net/)|一个带有 SQL 语法的 IndexedDB 包装器。|\n|[MiniMongo](https://github.com/mWater/minimongo)|由 localstorage 支持的客户端内存中的 mongodb，通过 http 进行服务器同步。|\n|[PouchDB](https://pouchdb.com/)|用 IndexedDB 实现离线数据存储，并在联网后自动与 CouchDB 数据库进行数据同步。|\n|[idb](https://www.npmjs.com/package/idb)|IndexedDB 扩展库，大小只有 1.05k，但让 IndexedDB 变的非常容易使用。|\n|[idb-keyval](https://www.npmjs.com/package/idb-keyval)|IndexedDB扩展库，大小只有 600B，基于 Promise 用于存储 键/值对，需要存储复杂数据请选择上面的 idb 扩展库。|\n|[lovefield](https://github.com/google/lovefield)|Lovefield 是一个用于 Web App 的关系型数据库，使用 JavaScript 编写，可以在不同的浏览器环境中运行，提供了类似 SQL 的 API，速度快、安全且易用。|\n\n---\n\n##### 五、参考文档\n\n- [Client-side_storage  -  MDN](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage)\n- [cookie  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Document/cookie)\n\n- [Web Storage API  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Storage_API)\n- [localStorage  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/localStorage)\n- [sessionStorage  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/sessionStorage)\n- [IndexedDB_API  -  MDN](https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API)\n- [Web_Workers_API  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/API/Web_Workers_API)\n\n\n","url":"https://learn-anything.cn/java-script-cookie-web-storage-api-indexeddb","published_at":"2021-12-27T05:08:34.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"除了缓存，浏览器还有哪些存储数据的方式？","slug":"java-script-cookie-web-storage-api-indexeddb"}},
    "staticQueryHashes": ["63159454"]}