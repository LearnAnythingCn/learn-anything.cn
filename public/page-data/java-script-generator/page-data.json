{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-generator",
    "result": {"data":{"strapiArticles":{"id":"Articles_510","title":"详解JavaScript的Generator对象","description":"Generator对象不能直接实例化，只能由生成器函数返回生成，具有迭代功能。","content":"##### 一、Generator 对象是什么？\n\nGenerator对象不能直接实例化，只能由生成器函数返回生成，具有迭代功能。\n\n```js\nfunction* infinite() {\n    let index = 0;\n\n    while (true) {\n        yield index++;\n    }\n}\n\nconst generator = infinite(); // \"Generator { }\"\n\nconsole.log(generator.next().value); // 0\nconsole.log(generator.next().value); // 1\nconsole.log(generator.next().value); // 2\n// ...\n```\n\n---\n\n##### 二、实例方法\n\n###### 1、Generator.prototype.next()\n\n功能：返回具有 value 和 done 两个属性的对象，也可以传入参数。\n\n```js\n// 实例1\nfunction* gen() {\n  yield 1;\n  yield 2;\n  yield 3;\n}\n\nconst g = gen(); // \"Generator { }\"\ng.next();      // \"Object { value: 1, done: false }\"\ng.next();      // \"Object { value: 2, done: false }\"\ng.next();      // \"Object { value: 3, done: false }\"\ng.next();      // \"Object { value: undefined, done: true }\"\n```\n\n```js\n// 实例2\nfunction* gen() {\n  while (true) {\n    let value = yield null;\n    console.log(value);\n  }\n}\n\nconst g = gen();\ng.next(1);\n// \"{ value: null, done: false }\"\ng.next(2);\n// 2\n// \"{ value: null, done: false }\"\n```\n\n```js\n// 实例3\nfunction* getPage(pageSize = 1, list) {\n    let output = [];\n    let index = 0;\n\n    while (index < list.length) {\n        output = [];\n        for (let i = index; i < index + pageSize; i++) {\n            if (list[i]) {\n                output.push(list[i]);\n            }\n        }\n\n        yield output;\n        index += pageSize;\n    }\n}\n\nlist = [1, 2, 3, 4, 5, 6, 7, 8]\nvar page = getPage(3, list);              // Generator { }\n\npage.next();                              // Object {value: (3) [1, 2, 3], done: false}\npage.next();                              // Object {value: (3) [4, 5, 6], done: false}\npage.next();                              // Object {value: (2) [7, 8], done: false}\npage.next();                              // Object {value: undefined, done: true}\n```\n\n---\n\n###### 2、Generator.prototype.return()\n\n功能：立即返回，退出生成器。\n\n```js\n// 实例1\nfunction* gen() {\n  yield 1;\n  yield 2;\n  yield 3;\n}\n\nconst g = gen();\n\ng.next();        // { value: 1, done: false }\ng.return('foo'); // { value: \"foo\", done: true }\ng.next();        // { value: undefined, done: true }\n```\n\n```js\n// 实例2\nfunction* gen() {\n  yield 1;\n  yield 2;\n  yield 3;\n}\n\nconst g = gen();\ng.next(); // { value: 1, done: false }\ng.next(); // { value: 2, done: false }\ng.next(); // { value: 3, done: false }\ng.next(); // { value: undefined, done: true }\ng.return(); // { value: undefined, done: true }\ng.return(1); // { value: 1, done: true }\n```\n\n---\n\n###### 3、Generator.prototype.throw()\n\n功能：抛出异常，返回包含 value 和 done 两个属性的对象。\n\n```js\nfunction* gen() {\n  while(true) {\n    try {\n       yield 42;\n    } catch(e) {\n      console.log('Error caught!');\n    }\n  }\n}\n\nconst g = gen();\ng.next();\n// { value: 42, done: false }\ng.throw(new Error('Something went wrong'));\n// \"Error caught!\"\n// { value: 42, done: false }\n```\n\n---\n\n##### 三、参考文档\n\n- [Generator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator)\n\n- [Generator的next方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/next)\n\n- [Generator的return方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/return)\n\n- [Generator的throw方法](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator/throw)","url":"https://learn-anything.cn/java-script-generator","published_at":"2021-12-21T07:24:47.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解JavaScript的Generator对象","slug":"java-script-generator"}},
    "staticQueryHashes": ["63159454"]}