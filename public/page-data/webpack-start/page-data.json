{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/webpack-start",
    "result": {"data":{"strapiArticles":{"id":"Articles_451","title":"学习webpack，从这里开始！","description":"webpack 是一个模块打包工具，可以打包js、css、jpg、png、less、jsx等，不仅可以减少网络流量，还能减少服务器请求，减轻服务器压力。","content":"##### 一、webpack 是什么？\n\nwebpack 是一个模块打包工具，不仅可以减少网络流量，还能减少服务器请求，减轻服务器压力。\n\n![webpack](https://learn-anything.cn/webpack.png)\n\n---\n\n##### 二、怎么使用？\n\n下面是一个简单打包 css 文件的步骤。\n\n###### 1、新建项目\n\n- 初始化 webpack 项目，包括配置文件\n\n  ```shell\n    # 1、初始化一个新的 webpack 项目\n    mkdir learn-webpack\n    cd learn-webpack\n    npx webpack-cli init\n  \n    # 2、按照下面选择进行\n    ? Which of the following JS solutions do you want to use? none\n    ? Do you want to use webpack-dev-server? No\n    ? Do you want to simplify the creation of HTML files for your bundle? Yes\n    ? Do you want to add PWA support? No\n    ? Which of the following CSS solutions do you want to use? none\n    ? Do you like to install prettier to format generated configuration? No\n    ? Pick a package manager: npm\n  ```\n\n---\n\n###### 2、增加 css\n\n- 新建 src/style.css 文件，复制下面代码到文件。\n\n  ```css\n  h2 {\n      color: red;\n  }\n  ```\n\n- 修改 src/index.js 文件，如下：\n\n  ```js\n  import './style.css';\n\n  console.log(\"Hello webpack!\")\n  ```\n\n- 修改 webpack.config.js 文件，增加下面 css 相关配置：\n\n  ```js\n  module: {\n          rules: [\n              {\n                  test: /\\.(eot|svg|ttf|woff|woff2|png|jpg|gif)$/i,\n                  type: 'asset',\n              },\n              {\n                  test: /\\.css$/i,\n                  use: ['style-loader', 'css-loader'],\n              },\n  \n              // Add your rules for custom modules here\n              // Learn more about loaders from https://webpack.js.org/loaders/\n          ],\n  },\n  ```\n\n- 安装 css 的 load 插件\n\n  ```\n  npm install style-loader css-loader\n  ```\n\n---\n\n###### 3、运行项目\n\n- 命令\n\n  ```shell\n  # 执行转换\n  npm run build\n  ```\n\n完成后，项目根目录会产生 `dist` 文件夹，浏览器可打开 index.html 文件查看效果，src 中的css 文件已经被打包了。\n\n---\n\n##### 三、重要概念\n\n###### 1、webpack-cli\n\n命令行界面（CLI）， 用于配置构建并与之交互。\n\n```shell\n# 安装\nnpm install webpack-cli\n\n# 运行 webpack\nnpx webpack build\n\n# 新建 webpack 项目\nnpx webpack init\n```\n\n- [命令说明](https://webpack.docschina.org/api/cli/)\n\n---\n\n###### 2、配置文件\n\n`npx webpack init`  可以快速新建 webpack 项目，包括配置文件。\n\n- [更多配置内容，看这里！](https://webpack.docschina.org/configuration/)\n\n---\n\n###### 3、loader\n\nwebpack 默认只能解析 JavaScript 和 JSON 文件，loader 让 webpack 能够处理其他类型文件。\n\n- babel-loader  ：可以让 webpack 把 ES2015+语法、JSX 写的代码 转换成 JavaScript 代码；\n- less-loader  ：可以让 webpack 把 less 语法写的代码 转换成 css 代码；\n\n- [更多 loader 看这里！](https://webpack.docschina.org/loaders/)\n\n---\n\n###### 4、plugin\n\n可以让 webpack 更容易使用，譬如上面新建的 webpack 项目中，就用到了 `html-webpack-plugin` 插件，该插件将为你生成一个 HTML5 文件， 在 body 中使用 `script` 标签引入所有 webpack 生成的 bundle。\n\n- [更多 plugin 看这里！](https://webpack.docschina.org/plugins/)\n\n---\n\n##### 四、案例场景\n\n###### 1、怎么打包 less 文件？\n\n步骤跟上面打包css 相同，只需配置文件和安装loader！[详细步骤，看这里！](https://learn-anything.cn/less-start)\n\n---\n\n##### 五、参考文档\n\n- [webpack  -  官网](https://webpack.docschina.org/)\n- [webpack 安装说明](https://webpack.docschina.org/guides/installation/)\n\n\n","url":"https://learn-anything.cn/webpack-start","author":null,"published_at":"2021-12-12T01:06:55.000Z","tags":[{"name":"webpack","slug":"webpack"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"学习webpack，从这里开始！","slug":"webpack-start"}},
    "staticQueryHashes": ["63159454"]}