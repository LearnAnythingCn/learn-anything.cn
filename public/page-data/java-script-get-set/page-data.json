{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-get-set",
    "result": {"data":{"strapiArticles":{"id":"Articles_511","title":"详解JavaScript的get和set方法","description":"get关键字将对象属性与函数进行绑定，当属性被访问时，对应函数被执行；set关键字将对象属性与函数进行绑定，当改变属性值时，对应函数被执行。","content":"##### 一、get 方法\n\n###### 1、功能\n\n`get`  关键字将对象属性与函数进行绑定，当属性被访问时，对应函数被执行。\n\n```js\n// 语法一\n{get prop() { ... } }\n// 语法二\n{get [expression]() { ... } }\n```\n\n###### 2、实例：语法一\n\n```js\nconst obj = {\n  log: ['example','test'],\n  get latest() {\n    if (this.log.length == 0) return undefined;\n    return this.log[this.log.length - 1];\n  }\n}\nconsole.log(obj.latest); \n// 输出：\"test\".\n```\n\n###### 3、实例：语法二\n\n使用表达式作为属性名。\n\n```js\nvar expr = 'foo';\n\nvar obj = {\n  get [expr]() { return 'bar'; }\n};\n\nconsole.log(obj.foo); \n// 输出：bar\n```\n\n###### 4、动态新增 get 属性\n\n```js\nvar o = { a:0 }\n\nObject.defineProperty(o, \"b\", { get: function () { return this.a + 1; } });\nconsole.log(o.b) \n// 输出：1\n```\n\n###### 5、删除 get 属性\n\n```js\nconst obj = {\n  log: ['example','test'],\n  get latest() {\n    if (this.log.length == 0) return undefined;\n    return this.log[this.log.length - 1];\n  }\n}\n\ndelete obj.latest;\nconsole.log(obj);\n```\n\n###### 6、get 与 defineProperty()\n\nget关键字 和 Object.defineProperty 方法 都可以设置 get 方法，区别是：\n\n-  get 关键字设置的属性，被定义在实例原型上；\n\n- Object.defineProperty() 设置的属性，被定义在实例自身。\n\n```js\nclass Example {\n  get hello() {\n    return 'world';\n  }\n}\n\nconst obj = new Example();\nconsole.log(obj.hello);\n// \"world\"\n\nconsole.log(Object.getOwnPropertyDescriptor(obj, 'hello'));\n// undefined\n\nconsole.log(\n  Object.getOwnPropertyDescriptor(\n    Object.getPrototypeOf(obj), 'hello'\n  )\n);\n// { configurable: true, enumerable: false, get: function get hello() { return 'world'; }, set: undefined }\n```\n\n---\n\n##### 二、set 方法\n\n###### 1、功能\n\n`set` 关键字将对象属性与函数进行绑定，当改变属性值时，对应函数被执行。\n\n```js\n// 语法一\n{set prop(val) { . . . }}\n// 语法二\n{set [expression](val) { . . . }}\n```\n\n###### 2、实例：语法一\n\n```js\nconst language = {\n  set current(name) {\n    this.log.push(name);\n  },\n  log: []\n};\n\nlanguage.current = 'EN';\nlanguage.current = 'FA';\n\nconsole.log(language.log);\n// expected output: Array [\"EN\", \"FA\"]\n```\n\n###### 3、实例：语法二\n\n使用表达式作为属性名。\n\n```js\nconst expr = \"foo\";\n\nconst obj = {\n  baz: \"bar\",\n  set [expr](v) { this.baz = v; }\n};\n\nconsole.log(obj.baz); // \"bar\"\nobj.foo = \"change\";      // run the setter\nconsole.log(obj.baz); // \"change\"\n```\n\n###### 4、动态新增 set 属性\n\n```js\nconst language = {\n  \tlog: []\n};\n// 1、新增 set\nObject.defineProperty(language, \"calc\", { set: function (x) { this.a = x / 2; } });\nlanguage.calc = 5;\nconsole.log(language.a); \n// 输出：2.5\n```\n\n###### 5、删除 set 属性\n\n```js\nconst language = {\n  set current(name) {\n    this.log.push(name);\n  },\n  log: []\n};\n\nlanguage.current = 'EN';\nlanguage.current = 'FA';\n\n// 删除 set\ndelete language.current;\nconsole.log(language)\n```\n\n---\n\n##### 三、参考方法\n\n- [get  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/get)\n\n- [set  -  MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/set)\n\n\n","url":"https://learn-anything.cn/java-script-get-set","published_at":"2021-12-21T11:12:46.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解JavaScript的get和set方法","slug":"java-script-get-set"}},
    "staticQueryHashes": ["63159454"]}