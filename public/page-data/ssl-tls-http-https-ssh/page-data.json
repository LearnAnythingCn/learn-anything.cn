{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/ssl-tls-http-https-ssh",
    "result": {"data":{"strapiArticles":{"id":"Articles_7","title":"SSL TLS HTTP HTTPS SSH 分别是什么意思？","description":"SSL(Secure Sockets Layer，安全套接字协议)、TLS(Transport Layer Security，传输层安全协议)，都是安全协议，目的是加强网路通信的安全，SSL由于其设计上的缺陷，逐渐被更安全的TLS给取代。","content":"##### HTTP + SSL/TLS = HTTPS\n\n- SSL(Secure Sockets Layer，安全套接字协议)\n- TLS(Transport Layer Security，传输层安全协议)\n- HTTP(HyperText Transfer Protocol ，超文本传输协议)，让计算机之间可以进行明文数据交换，默认端口80.\n- HTTPS(HyperText Transfer Protocol Secure，超文本传输安全协议)，用SSL/TLS对数据加密，再通过HTTP传输，保证数据的安全性，默认端口443.\n\n---\n##### SSL 与 TLS  区别\n\nSSL与TLS都是用于互联网传输的加密协议。\n- SSL是有Netscape开发加密协议；\n  - SSL 1.0版本没有公开发布；\n  - SSL 2.0版本于1995年发布，简写成SSLv2, 于2011年被IETF废弃；\n  - SSL 3.0版本于1996年发布,简写成SSLv3, 于2015年被IETF废弃；\n- TLS是基于SSL 3.0的一个新版本，原则上他的名字是SSL 4.0；只是IETF在把SSL标准化时把SSL名称改成了TLS。\n\n---\n##### CA及数字证书\n\n证书颁发机构（CA, Certificate Authority）即颁发数字证书的机构，HTTP服务升级为HTTPS时，就需要数字证书来保证其通讯链路的安全，[Let's Encrypt](https://letsencrypt.org/) 是免费提供此证书的公益机构。\n\n- 申领证书流程：\n\t1. 服务器先生成一对密钥(私钥+公钥)；\n\t2. 公钥+服务器信息(域名、ip等)，发送给CA机构；\n\t3. CA机构会根据收到的信息，核实身份并加密生成证书，此证书也只有CA机构的私钥才能解密，这样也就保证了域名与服务器ip的一一对应关系，保证通讯链路的安全性。\n\n- 使用证书\n\t1. 客户访问域名：「https://www.example.com」\n\t从CA机构获取域名对应证书，客户浏览器根据证书中公钥给需要传输的数据进行加密。\n\t2. 服务器获得数据后，用自己的私钥来解密数据，如果公钥与私钥数据不匹配，就算第三方获得数据，也无法解密。\n\n- 数字证书组成部分有：\n  1. 主体信息(域名、公司名、地址、国家等);\n\t2. 有效期；\n\t3. Public Key；\n\t4. CA的签名；\n\n---\n\n##### Telenet + SSH = ssh\n\nSSH(Security Shell) 是专为远程登录和其他网络服务(Telnet、ftp等)提供安全性的协议。OpenSSH基于SSH协议实现了很多应用：ssh、scp、sftp等，ssh默认端口22。\n\n---\n##### OpenSSH是什么？\n\nOpenSSH是实现了SSH协议的软件包，[OpenSSH官方网站](https://www.openssh.com/)，包含以下工具：\n- Remote operations are done using [ssh](https://man.openbsd.org/ssh.1), [scp](https://man.openbsd.org/scp.1), and [sftp](https://man.openbsd.org/sftp.1).\n- Key management with [ssh-add](https://man.openbsd.org/ssh-add.1), [ssh-keysign](https://man.openbsd.org/ssh-keysign.8), [ssh-keyscan](https://man.openbsd.org/ssh-keyscan.1), and [ssh-keygen](https://man.openbsd.org/ssh-keygen.1).\n- The service side consists of [sshd](https://man.openbsd.org/sshd.8), [sftp-server](https://man.openbsd.org/sftp-server.8), and [ssh-agent](https://man.openbsd.org/ssh-agent.1).\n\n---\n\n###### 1、ssh\n\nssh是OpenSSH实现远程登录的客户端软件，让远程服务器执行命令操作。\n```shell\n# 远程关机命令\n$ ssh -t user@ip 'sudo shutdown -h now'\n\n# 远程关闭多台服务器：\n$ ssh -t user@ip1 'sudo shutdown -h now';ssh -t user@ip2 'sudo shutdown -h now';\n\n# 远程重启命令\n$ ssh -t user@ip1 'sudo reboot'\n\n# 重启SSH\n$ /etc/init.d/ssh restart\n$ sudo service ssh restart\n\n# SSH配置目录\n/etc/ssh\n\n# 公钥的目录\n~/.ssh\n\n# 可以输出登录时log信息\nssh -v [root@node1](mailto:user@ip)\n\n# 查看SSH的进程情况\n$ ps aux | grep ssh \n```\n\n###### 2、ssh免密登录\n\n$ ssh user@ip登录远程服务器，每一次都要输入密码，用密钥可免密登录。\n\n```shell\n# 系统环境 : MAC\n# 创建SSH秘钥(ssh-keygen是生成和管理密钥工具)\n$ ssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa\n\n# 把密钥加入到远程机器上（ssh-copy-id是安装密钥到远程服务器的工具）\n$ ssh-copy-id -i ~/.ssh/id_rsa.pub user@ip\n\n# 直接登录，无需再输入密码\n$ ssh user@ip\n```\n\n###### 3、scp\n\nscp使用ssh与远程服务器相互传输文件，此通信过程也是加密的。\n\n```shell\n# 本地文件「test.txt」拷贝到服务器的「~/」目录下\n$ scp ~/test.txt user@ip:~/\n\n# 本地文件夹「test」拷贝到服务器「~/」目录下\n$ scp -r ~/test user@ip:~/\n\n# 服务器文件夹「test」拷贝到本地「~/」目录下\n$ scp -r user@ip:~/test ~/ \n\n```\n\n###### 4、ssh-copy-id\n\n```shell\n# MAC下安装ssh-copy-id\n$ brew install ssh-copy-id\n\n# 使用见「ssh免密登录」\n```\n\n---\n\n##### 问题与解决方案\n\n###### 1、WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! \n\n```shell\n$ ssh pi@192.168.1.9\n\n# 出现下面错误:\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\nIT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!\nSomeone could be eavesdropping on you right now (man-in-the-middle attack)!\nIt is also possible that a host key has just been changed.\nThe fingerprint for the ECDSA key sent by the remote host is\nSHA256:VrUX6WSrWP7GYk+9rjNfUitciAFE1DJPPR8lilyXq4Q.\nPlease contact your system administrator.\nAdd correct host key in /Users/liuhai/.ssh/known_hosts to get rid of this message.\nOffending ECDSA key in /Users/liuhai/.ssh/known_hosts:5\nECDSA host key for 192.168.1.9 has changed and you have requested strict checking.\nHost key verification failed.\n\n# Mac下解决方案：\n第一步：$ sudo nano ~/.ssh/known_hosts\n第二步：删除ip对应哪一行数据(fn+delete)\n第三步：ctrl+x，保存退出！\n```\n\n\n","url":"https://learn-anything.cn/ssl-tls-http-https-ssh","author":null,"published_at":"2021-09-13T02:33:03.000Z","tags":[{"name":"http/https","slug":"http-https"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"SSL TLS HTTP HTTPS SSH 分别是什么意思？","slug":"ssl-tls-http-https-ssh"}},
    "staticQueryHashes": ["63159454"]}