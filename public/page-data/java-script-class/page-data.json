{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-class",
    "result": {"data":{"strapiArticles":{"id":"Articles_525","title":"详解JavaScript的class对象","description":"class 是 ECMAScript 2015 引入的类对象，其继承特性也是基于原型链。","content":"##### 一、class 是什么？\n\nclass 是 ECMAScript 2015 引入的类对象，其继承特性也是基于原型链。\n\n###### 1、定义类\n\n```js\n// 语法一\nclass name [extends] {\n  // class body\n}\n\n// 语法二\nconst MyClass = class [className] [extends] {\n  // class body\n};\n```\n\n###### 2、简单实例\n\n```js\nlet Foo = class {\n  constructor() {}\n  bar() {\n    return \"Hello World!\";\n  }\n};\n\nlet instance = new Foo();\ninstance.bar();\n```\n\n---\n\n##### 二、class 特性\n\n###### 1、constructor\n\n功能：constructor() 是初始化 class对象 的特殊函数，称之为构造函数。\n\n- 一个类中只能有一个名为 constructor 的函数；\n- 如果不指定 constructor ，会使用默认构造函数；\n- constructor 中，可以用 super 调用父类的构造函数、属性、函数，但必须在this之前。\n\n```js\n// 1、语法\nconstructor([arguments]) { ... }\n\n// 2、类的默认构造函数\nconstructor() {}\n\n// 3、子类的默认构造函数\nconstructor(...args) {\n  super(...args);\n}\n```\n\n```js\n// 使用实例\nclass Polygon {\n    constructor() {\n        this.name = \"Polygon\";\n    }\n}\n\nclass Square extends Polygon {\n    constructor() {\n        super();\n    }\n}\nlet newInstance = new Square();\nconsole.log(newInstance.name); //Polygon\n```\n\n---\n\n###### 2、extends\n\n功能：用于表示创建某个类的子类，实现继承。\n\n```js\n// 语法\nclass ChildClass extends ParentClass { ... }\n\n// 实例\nclass myDate extends Date {\n  constructor() {\n    super();\n  }\n\n  getFormattedDate() {\n    var months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    return this.getDate() + \"-\" + months[this.getMonth()] + \"-\" + this.getFullYear();\n  }\n}\n```\n\n---\n\n###### 3、super\n\n功能：用于调用父类构造函数、属性、函数。只能在构造函数中使用且在this之前。\n\n```js\n// 语法\nsuper([arguments]); // 调用父类构造函数\nsuper.functionOnParent([arguments]);// 调用父类函数\nsuper.property;// 调用父类属性\n```\n\n- 简单实例\n\n```js\nclass Polygon {\n  constructor(height, width) {\n    this.name = 'Rectangle';\n    this.height = height;\n    this.width = width;\n  }\n  sayName() {\n    console.log('Hi, I am a ', this.name + '.');\n  }\n  get area() {\n    return this.height * this.width;\n  }\n  set area(value) {\n    this._area = value;\n  }\n}\n\nclass Square extends Polygon {\n  constructor(length) {\n    this.height; // ReferenceError，super 需要先被调用！\n\n    // 这里，它调用父类的构造函数的,\n    // 作为Polygon 的 height, width\n    super(length, length);\n\n    // 注意: 在派生的类中, 在你可以使用'this'之前, 必须先调用super()。\n    // 忽略这, 这将导致引用错误。\n    this.name = 'Square';\n  }\n}\n```\n\n- super 调用父类静态函数\n\n```js\nclass Rectangle {\n  constructor() {}\n  static logNbSides() {\n    return 'I have 4 sides';\n  }\n}\n\nclass Square extends Rectangle {\n  constructor() {}\n  static logDescription() {\n    return super.logNbSides() + ' which are all equal';\n  }\n}\nSquare.logDescription(); // 'I have 4 sides which are all equal'\n```\n\n- 删除 super 的属性，会有异常\n\n```js\nclass Base {\n  constructor() {}\n  foo() {}\n}\nclass Derived extends Base {\n  constructor() {}\n  delete() {\n    delete super.foo; // this is bad\n  }\n}\n\nnew Derived().delete(); // ReferenceError: invalid delete involving 'super'.\n```\n\n- 原型链中使用super\n\n```js\nvar obj1 = {\n  method1() {\n    console.log(\"method 1\");\n  }\n}\n\nvar obj2 = {\n  method2() {\n   super.method1();\n  }\n}\n\nObject.setPrototypeOf(obj2, obj1);\nobj2.method2(); // logs \"method 1\"\n```\n\n---\n\n###### 4、new\n\n用于创建用户定义的对象实例 或 创建具有构造函数的内置对象实例。[更多...](https://learn-anything.cn/java-script-new)\n\n---\n\n##### 三、参考文档\n\n- [class语句  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/class)\n\n- [class表达式  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/class)\n\n- [super  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/super)\n\n- [constructor  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/constructor)\n\n- [extends  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Classes/extends)\n\n\n","url":"https://learn-anything.cn/java-script-class","author":null,"published_at":"2021-12-25T15:16:21.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解JavaScript的class对象","slug":"java-script-class"}},
    "staticQueryHashes": ["63159454"]}