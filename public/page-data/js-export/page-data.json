{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/js-export",
    "result": {"data":{"strapiArticles":{"id":"Articles_335","title":"JS中export怎么用？","description":"JavaScript中如何导出模块，实现代码的重用？分为默认导出和命名导出两中方式，分别怎么使用？","content":"##### 一、export 用法\n\n有两种不同的导出方式：命名导出和默认导出。命名导出可以导出多个接口，而默认导出，只能导出一个。\n\n###### 1、命名导出：\n\n- 导入时，必须使用导出接口的名字。\n\n  ```js\n  // 导出事先定义的特性\n  export { myFunction，myVariable };\n  \n  // 导出单个特性（可以导出var，let，const,function,class）\n  export let myVariable = Math.sqrt(2);\n  export function myFunction() { ... };\n  ```\n\n###### 2、默认导出：\n\n- 导入时，可以使用任意名字来表示导出接口。\n\n  ```js\n  // 导出事先定义的特性作为默认值\n  export { myFunction as default };\n  \n  // 导出单个特性作为默认值\n  export default function () { ... }\n  export default class { .. }\n  \n  // 每个导出都覆盖前一个导出\n  ```\n\n- 如果我们要导出一个值或得到模块中的返回值，就可以使用默认导出\n\n  ```js\n  // module \"my-module.js\"\n  \n  export default function cube(x) {\n    return x * x * x;\n  }\n  ```\n\n  ```js\n  import cube from './my-module.js';\n  console.log(cube(3)); // 27\n  ```\n\n---\n\n##### 二、模块重定向\n\n举个例子，假如我们有如下层次结构：\n\n- `childModule1.js`: 导出 `myFunction` 和 `myVariable`\n- `childModule2.js`: 导出 `myClass`\n- `parentModule.js`: 作为聚合器（不做其他事情）\n- 顶层模块：调用 `parentModule.js` 的导出项\n\n```js\n// childModule1.js 中\nlet myFunction = ...; // assign something useful to myFunction\nlet myVariable = ...; // assign something useful to myVariable\nexport {myFunction, myVariable};\n```\n\n```js\n// childModule2.js 中\nlet myClass = ...; // assign something useful to myClass\nexport myClass;\n```\n\n```js\n// parentModule.js 中\n// 仅仅聚合 childModule1 和 childModule2 中的导出\n// 以重新导出他们\nexport { myFunction, myVariable } from 'childModule1.js';\nexport { myClass } from 'childModule2.js';\n```\n\n```js\n// 顶层模块中\n// 我们可以从单个模块调用所有导出，因为 parentModule 事先\n// 已经将他们“收集”/“打包”到一起\nimport { myFunction, myVariable, myClass } from 'parentModule.js'\n```\n\n---\n\n##### 三、语法补充\n\n```js\n// 导出单个特性\nexport let name1, name2, …, nameN; // also var, const\nexport let name1 = …, name2 = …, …, nameN; // also var, const\nexport function FunctionName(){...}\nexport class ClassName {...}\n\n// 导出列表\nexport { name1, name2, …, nameN };\n\n// 重命名导出\nexport { variable1 as name1, variable2 as name2, …, nameN };\n\n// 解构导出并重命名\nexport const { name1, name2: bar } = o;\n\n// 默认导出\nexport default expression;\nexport default function (…) { … } // also class, function*\nexport default function name1(…) { … } // also class, function*\nexport { name1 as default, … };\n\n// 导出模块合集\nexport * from …; // does not set the default export\nexport * as name1 from …; // Draft ECMAScript® 2O21\nexport { name1, name2, …, nameN } from …;\nexport { import1 as name1, import2 as name2, …, nameN } from …;\nexport { default } from …;\n```\n\n---\n\n##### 四、参考文档\n\n- [export - 详细说明](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/export)","url":"https://learn-anything.cn/js-export","published_at":"2021-11-04T01:09:41.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"JS中export怎么用？","slug":"js-export"}},
    "staticQueryHashes": ["63159454"]}