{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/react-props",
    "result": {"data":{"strapiArticles":{"id":"Articles_101","title":"React的props用法详解！","description":"props解决了什么问题？怎么使用？{...props}、props.children是啥意思？怎么用？","content":"##### 一、解决了什么问题？\n\nprops是组件（包括函数组件和class组件）间的内置属性，用其可以传递数据给子节点。\n\n##### 二、怎么使用？\n\n###### 1、只读\n\nprops在传递数据的过程中，是只读的不能修改。\n\n```jsx\nclass App extends React.Component {\n    // 第一步：给节点设置属性 `theme`\n    render() {\n        return <Toolbar theme=\"dark\" />;\n    }\n}\n\nfunction Toolbar(props) {\n    // 第二步：子节点可以访问父节点的props属性，但只能读取不能修改\n    return (\n        <div>\n            <ThemedButton theme={props.theme} />\n        </div>\n    );\n}\n\nclass ThemedButton extends React.Component {\n    // 第三步：孙子节点依然可访问props属性，同样只能读不能修改 \n    render() {\n        return <Button theme={this.props.theme} />;\n    }\n}\n```\n\n###### 2、{...props}\n\n展开props属性的一种简洁写法，属于  [js展开语法](https://learn-anything.cn/java-script-spread-syntax)  。\n\n```js\nvar props = { x: 1, y: 1, z:1 };\n<Component {...props} />\n\n// 上面等价于下面的写法\n<Component x=1 y=1 z=1 />\n```\n\n###### 3、props.children\n\n指组件的子元素，下面  `{props.children}`   就是指 : \"Hello world!\"\n\n```js\n<Welcome>Hello world!</Welcome>\n\nfunction Welcome(props) {\n    return <p>{props.children}</p>;\n}\n```\n\n对于 class 组件，请使用  `this.props.children`  来获取：\n\n```js\nclass Welcome extends React.Component {\n    render() {\n        return <p>{this.props.children}</p>;\n    }\n}\n```\n\n---\n\n##### 三、参考链接：\n\n- [React - props - 官方说明](https://zh-hans.reactjs.org/docs/components-and-props.html)","url":"https://learn-anything.cn/react-props","published_at":"2021-10-08T05:02:00.000Z","tags":[{"name":"React","slug":"react"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"React的props用法详解！","slug":"react-props"}},
    "staticQueryHashes": ["63159454"]}