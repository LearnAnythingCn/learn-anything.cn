{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-map",
    "result": {"data":{"strapiArticles":{"id":"Articles_515","title":"详解JavaScript的Map数据结构","description":"Map 是一个键值对 [key, value] 的数据结构，在JavaScript中是内置全局对象。","content":"##### 一、Map 是什么？\n\nMap 是一个键值对 [key, value] 的数据结构，在JavaScript中是内置全局对象。\n\n---\n\n##### 二、怎么用？\n\n###### 1、添加和读取\n\n```js\nlet myMap = new Map();\nlet keyString = 'a string';\n\n// 添加键\nmyMap.set(keyString, \"和键'a string'关联的值\");\n// 读取值\nmyMap.get(keyString);    // \"和键'a string'关联的值\"\n\nmyMap.size; // 3\n```\n\n---\n\n###### 2、`for...of`\n\n```js\nlet myMap = new Map();\nmyMap.set(0, \"zero\");\nmyMap.set(1, \"one\");\nfor (let [key, value] of myMap) {\n  console.log(key + \" = \" + value);\n}\n// 输出：\"0 = zero\"、\"1 = one\"\n\nfor (let key of myMap.keys()) {\n  console.log(key);\n}\n// 输出： \"0\" 、 \"1\"\n\nfor (let value of myMap.values()) {\n  console.log(value);\n}\n// 输出： \"zero\"、 \"one\"\n\nfor (let [key, value] of myMap.entries()) {\n  console.log(key + \" = \" + value);\n}\n// 输出： \"0 = zero\" 、 \"1 = one\"\n```\n\n---\n\n###### 3、forEach()\n\n```js\nlet myMap = new Map();\nmyMap.set(0, \"zero\");\nmyMap.set(1, \"one\");\nmyMap.forEach(function(value, key) {\n  console.log(key + \" = \" + value);\n})\n// 输出：\"0 = zero\" 、 \"1 = one\"\n```\n\n---\n\n###### 4、二维数组 与 Map\n\n二维键值对数组和Map可以相互转换。\n\n```js\nlet kvArray = [[\"key1\", \"value1\"], [\"key2\", \"value2\"]];\n\n// 1、二维数组转Map\nlet myMap = new Map(kvArray);\nmyMap.get(\"key1\"); // 返回值为 \"value1\"\n\n// 2、Map转二维数组\nconsole.log(Array.from(myMap)); // 输出和kvArray相同的数组\n\n// 3、使用展开运算符，转换Map为二维数组\nconsole.log([...myMap]);\n\n// 4、转换Map的key为数组\nconsole.log(Array.from(myMap.keys())); // 输出 [\"key1\", \"key2\"]\n```\n\n---\n\n###### 5、Map合并\n\n```js\nlet first = new Map([\n  [1, 'one'],\n  [2, 'two'],\n  [3, 'three'],\n]);\n\nlet second = new Map([\n  [1, 'uno'],\n  [2, 'dos']\n]);\n\n// 合并两个Map对象时，如果有重复的键值，则后面的会覆盖前面的。\n// 展开运算符本质上是将Map对象转换成数组。\nlet merged = new Map([...first, ...second]);\n\nconsole.log(merged.get(1)); // uno\nconsole.log(merged.get(2)); // dos\nconsole.log(merged.get(3)); // three\n```\n\n---\n\n###### 6、复制Map\n\n注意数据本身未被克隆，也就是  `[1,'one']`  只有一份。\n\n```js\nlet original = new Map([\n  [1, 'one']\n]);\n\nlet clone = new Map(original);\n\nconsole.log(clone.get(1)); // one\nconsole.log(original === clone); // false. 浅比较 不为同一个对象的引用\n```\n\n###### 7、删除和存在判断\n\n```js\nlet myMap = new Map()\nmyMap.set('bla','blaa')\nmyMap.set('bla2','blaa2')\n\nmyMap.has('bla')    // true\nmyMap.delete('bla') // true\nconsole.log(myMap)  // Map { 'bla2' => 'blaa2' }\n```\n\n---\n\n##### 三、参考文档\n\n- [Map  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Map)","url":"https://learn-anything.cn/java-script-map","author":null,"published_at":"2021-12-22T15:05:47.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解JavaScript的Map数据结构","slug":"java-script-map"}},
    "staticQueryHashes": ["63159454"]}