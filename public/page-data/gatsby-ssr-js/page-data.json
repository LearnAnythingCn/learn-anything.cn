{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/gatsby-ssr-js",
    "result": {"data":{"strapiArticles":{"id":"Articles_363","title":"gatsby-ssr.js有什么作用？","description":"Gatsby 项目中的gatsby-ssr.js文件有什么作用？","content":"##### 一、简介\n\nGatsby 编译完成后，会为每个页面生成对应的 HTML 文件。而  `gatsby-ssr.js`  文件中提供了一些API，用于编译完成之前修改这些 HTML 的内容。\n\n---\n\n##### 二、API 说明\n\n###### 1、onRenderBody\n\n- 功能：生成HTML之前，修改一些body信息。\n\n  ```js\n  const React = require(\"react\")\n  const Layout = require(\"./src/components/layout\")\n  \n  // Adds a class name to the body element\n  exports.onRenderBody = ({ setBodyAttributes }, pluginOptions) => {\n    setBodyAttributes({\n      className: \"my-body-class\",\n    })\n  }\n  ```\n\n---\n\n###### 2、wrapPageElement\n\n- 功能：用于plugin，给元素增加一个父容器。\n\n  ```js\n  const React = require(\"react\")\n  const Layout = require(\"./src/components/layout\")\n  \n  // Wraps every page in a component\n  exports.wrapPageElement = ({ element, props }) => {\n    return <Layout {...props}>{element}</Layout>\n  }\n  ```\n\n---\n\n##### 三、重要规则\n\n###### 1、一致性\n\n`gatsby-ssr.js`  和  `gatsby-browser.js`  这两个文件中都提供了这两个API：`wrapPageElement` 和 `wrapRootElement` 。所以要保持两个文件中这两个API的代码一致性。\n\n---\n\n##### 四、参考文档\n\n- [gatsby-ssr.js - 官方说明](https://www.gatsbyjs.com/docs/reference/config-files/gatsby-ssr/)","url":"https://learn-anything.cn/gatsby-ssr-js","author":null,"published_at":"2021-11-13T05:36:37.000Z","tags":[{"name":"Gatsby","slug":"gatsby"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"gatsby-ssr.js有什么作用？","slug":"gatsby-ssr-js"}},
    "staticQueryHashes": ["63159454"]}