{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/react-load",
    "result": {"data":{"strapiArticles":{"id":"Articles_91","title":"React的安装和使用！","description":"React怎么用在项目中？JSX与React有啥关系？JS与JSX有啥关系？用三种方式创建React项目：Create React App、Next.js、Gatsby。","content":"##### 一、React库说明\n\nReact库包含两部分：1、React包含了所有基本功能；2、ReactDOM只包含了操作DOM的功能。\n\n---\n\n###### 1、加载React库\n\n```js\n# 1、用<script>加载\n开发版：<script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin></script>\n发布版：<!-- <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\" crossorigin></script>\n\n# 2、ES5 和 npm 环境中用require\nvar React = require('react')\n\n# 3、ES6 和 npm 环境中用import\nimport React from 'react'\n```\n\n###### 2、加载ReactDOM库\n\n```js\n# 1、用<script>加载\n开发版： <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin></script>\n发布版：<script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\" crossorigin></script>\n\n# 2、ES5 和 npm 环境中用require\nvar ReactDOM = require('react-dom')\n\n# 3、ES6 和 npm 环境中用import\nimport ReactDOM from 'react-dom'\n```\n\n---\n\n##### 二、HTML中使用React\n\n只用浏览器原生支持特性来加载使用React，此种方式适合项目演示和学习用。\n\n###### 1、HTML配置React环境\n\n```html\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>Add React in One Minute</title>\n</head>\n\n<body>\n\n    <!-- 第一步：设置父容器 -->\n    <div id=\"like_button_container\"></div>\n\n    <!-- 第二步：加载开发版本的React -->\n    <script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin></script>\n\n    <!-- 部署时，请用下面链接替代上面 -->\n    <!-- <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\" crossorigin></script> -->\n\n    <!-- 第三步：编写React组件代码 -->\n    <script src=\"like_button.js\"></script>\n\n</body>\n\n</html>\n```\n\n###### 2、编写React组件\n\n```js\n// like_button.js\n'use strict';\n\nconst e = React.createElement;\n\nclass LikeButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { liked: false };\n    }\n\n    render() {\n        if (this.state.liked) {\n            return 'You liked this.';\n        }\n\n        return e(\n            'button',\n            { onClick: () => this.setState({ liked: true }) },\n            'Like'\n        );\n    }\n}\n\nconst domContainer = document.querySelector('#like_button_container');\nReactDOM.render(e(LikeButton), domContainer);\n```\n\n###### 3、查看效果\n\n把上面html文件和js文件放在同一个文件夹内，可用浏览器打开html文件，查看效果。\n\n---\n\n##### 三、HTML中使用React和JSX\n\njsx是js的扩展语法，用标签式方式编写UI元素，无法被浏览器直接支持，需要预处理器把jsx转为浏览器支持的html标签，这个预处理器就是babel， React没有强制要求使用JSX，但使用JSX编写UI，确实带来很多便利。\n\n###### 法一：脚本加载babel\n\n把下面代码存储为html文件，打开即可看到效果，此法适合项目演示和学习，不适合发布项目。\n\n```html\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>Hello World</title>\n    <!-- 第一步：加载开发版本的React -->\n    <script src=\"https://unpkg.com/react@17/umd/react.development.js\"></script>\n    <script src=\"https://unpkg.com/react-dom@17/umd/react-dom.development.js\"></script>\n\n    <!-- 部署发布时，请用下面链接替代上面 -->\n    <!-- <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\" crossorigin></script> -->\n\n    <!-- 第二步：加载开发版本的babel -->\n    <script src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\n\n</head>\n\n<body>\n\n    <div id=\"root\"></div>\n\n    <script type=\"text/babel\">\n        // 第三步：使用JSX编写UI\n        ReactDOM.render(\n            <h1>Hello, world!</h1>,\n            document.getElementById('root')\n        );\n\n    </script>\n\n</body>\n\n</html>\n```\n\n###### 法二：安装babel到项目\n\n1. 新建项目文件夹：test；\n2. 新建并复制下面代码到test/index.html文件；\n\n```html\n<!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>Add React in One Minute</title>\n</head>\n\n<body>\n\n    <!-- 第一步：设置父容器 -->\n    <div id=\"like_button_container\"></div>\n\n    <!-- 第二步：加载开发版本的React -->\n    <script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin></script>\n\n    <!-- 部署发布时，请用下面链接替代上面 -->\n    <!-- <script src=\"https://unpkg.com/react@16/umd/react.production.min.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\" crossorigin></script> -->\n\n    <!-- 第三步：加载React组件 -->\n    <script src=\"like_button.js\"></script>\n\n</body>\n\n</html>\n```\n\n3. 在test文件夹下，新建src文件夹；\n\n4. 在src文件下，新建并复制下面js代码到like_button.js\n\n```js\n'use strict';\n// 第三步：编写组件\nclass LikeButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { liked: false };\n    }\n\n    render() {\n        if (this.state.liked) {\n            return 'You liked this.';\n        }\n\n        return (\n            <button onClick={() => this.setState({ liked: true })}>\n                Like-babel\n            </button>\n        );\n    }\n}\n\nlet domContainer = document.querySelector('#like_button_container');\nReactDOM.render(<LikeButton />, domContainer);\n```\n\n5. 安装`Node.js` \n\n6. 打开terminal，到项目根目录test下，执行下面命令安装babel\n\n```shell\nnpm init -y\nnpm install babel-cli@6 babel-preset-react-app@3\n```\n\n7. 运行jsx预处理器babel\n\n```shell\nnpx babel --watch src --out-dir . --presets react-app/prod\n```\n\n8. 用浏览器打开index.html，即可看到运行效果。可修改src/like_button.js内容，babel会自动转化src/like_button.js，在项目根目录test生成一个浏览器支持的like_button.js，浏览器刷新index.html，即可看到修改后效果。\n\n---\n\n##### 四、创建React项目\n\n###### 1、Create React App\n\n可快速创建单页面应用并自动配置好React的开发环境，提供良好的开发体验。但是必须安装 [Node >= 14.0.0 和 npm >= 5.6](https://nodejs.org/zh-cn/)。推荐作为学习实践项目或者单页面项目。\n\n`单页面应用(single-page application)`  是指加载单个页面，并下载所有必要资源（ JavaScript 、CSS等），后续页面的任何交互，都不再需要向 server 请求资源，即页面不会重新加载。\n\n```shell\n# 安装完Node后，在terminal中创建React的单页面应用\nnpx create-react-app my-app\n\n# 运行此单页面项目\ncd my-app\nnpm start\n\n# 编译项目作为production版本发布\nnpm run build\n```\n\n---\n\n###### 2、Next.js\n\n[Next.js](https://nextjs.org/)  是结合了  Node.js  和  React  的轻量级框架，适合场景：静态前端页面+Nodejs服务端，组合的应用。\n\n- [Next.js - 官方文档](https://nextjs.org/learn/basics/create-nextjs-app)\n\n---\n\n###### 3、Gatsby\n\n用 React 创建  **静态网站**  的最佳方式，适合内容型的网站，提供最快的访问速度。项目部署发布时，只需要上传编译后的  public 文件夹到Nginx服务器，即完成部署发布。\n\n- [Gatsby - 官方文档](https://www.gatsbyjs.com/docs/)\n\n---\n\n##### 五、参考文档：\n\n- [React - 官方文档](https://zh-hans.reactjs.org/docs/getting-started.html)","url":"https://learn-anything.cn/react-load","published_at":"2021-10-04T08:15:44.000Z","tags":[{"name":"React","slug":"react"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"React的安装和使用！","slug":"react-load"}},
    "staticQueryHashes": ["63159454"]}