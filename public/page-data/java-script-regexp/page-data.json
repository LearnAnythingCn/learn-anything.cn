{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-regexp",
    "result": {"data":{"strapiArticles":{"id":"Articles_527","title":"详解JavaScript的正则表达式","description":"正则表达式是用于匹配字符串的语法。在 JavaScript中，被用于 RegExp 的 exec 和 test 方法, 以及 String 的 match、matchAll、replace、search 和 split 方法。","content":"##### 一、正则表达式\n\n正则表达式是用于匹配字符串的语法。在 JavaScript中，被用于 RegExp 的 exec 和 test 方法, 以及 String 的 match、matchAll、replace、search 和 split 方法。[正则表达式语法，看这里！](https://learn-anything.cn/reg-exp)\n\n---\n\n###### 1、创建正则表达式\n\n法一 在加载脚本时就会被编译，性能高于法二。如果正则表达式不会改变，推荐使用法一。\n\n```js\n// 法一：\nvar re = /ab+c/[flags];\n\n// 法二：\nvar re = new RegExp(\"ab+c\"[,flags]);\n\n// flags 可用值 ：g(全局匹配)、i(忽略大小写)、m(多行匹配)、s(点号匹配所有字符)、u(unicode)、y(sticky，粘性匹配)。\n```\n\n---\n\n###### 2、可用方法\n\n| 方法                                                         | 描述                                                         |\n| :----------------------------------------------------------- | :----------------------------------------------------------- |\n| [exec](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/exec) | RegExp方法，查找字符串中的匹配项，返回一个数组（未匹配返回 null） |\n| [test](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test) | RegExp方法，测试是否有匹配项，返回true或false                |\n| [match](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/match) | String方法，查找字符串中的匹配项，返回一个数组（未匹配返回 null） |\n| [matchAll](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/matchAll) | String方法，查找字符串中所有匹配项，返回一个迭代器（iterator） |\n| [search](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/search) | String方法，测试是否有匹配项，返回匹配项的位置索引，失败时返回-1 |\n| [replace](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/replace) | String方法，查找字符串中的匹配项，并用指定字符串替换匹配项   |\n| [split](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/split) | String方法，用指定字符串分割字符串，返回字符串数组           |\n\n---\n\n##### 二、怎么用？\n\n###### 1、字面常量\n\n可以直接用 字面常量 来写正则表达式，再用 exec() 方法执行。\n\n```js\n// 1、实例\nvar myRe = /ab*/g;\nvar str = 'abbcdefabh';\nvar myArray;\nwhile ((myArray = myRe.exec(str)) !== null) {\n  var msg = 'Found ' + myArray[0] + '. ';\n  msg += 'Next match starts at ' + myRe.lastIndex;\n  console.log(msg);\n}\n\n// 输出：\nFound abb. Next match starts at 3\nFound ab. Next match starts at 9\n```\n\n```js\n// 2、实例：从 URL 中提取子域名\nvar url = \"http://xxx.domain.com\";\nconsole.log(/[^.]+/.exec(url)[0].substr(7)); \n// 输出：xxx\n```\n\n---\n\n###### 2、RegExp对象\n\n使用 RegExp 对象，来进行正则表达式匹配。\n\n```js\n// RegExp语法：pattern 是正则表达式文本\nnew RegExp(pattern[, flags])\nRegExp(pattern[, flags])\n```\n\n- 创建 RegExp 对象\n\n```js\nnew RegExp('ab+c', 'i'); // 首个参数为字符串模式的构造函数\nnew RegExp(/ab+c/, 'i'); // 首个参数为常规字面量的构造函数\n```\n\n- 实例\n\n```js\nconst regex1 = RegExp('foo*', 'g');\nconst str1 = 'table football, foosball';\nlet array1;\n\nwhile ((array1 = regex1.exec(str1)) !== null) {\n    console.log(`Found ${array1[0]}. Next starts at ${regex1.lastIndex}.`);\n    // expected output: \"Found foo. Next starts at 9.\"\n    // expected output: \"Found foo. Next starts at 19.\"\n}\n```\n\n---\n\n###### 3、String\n\n可以使用 String 的方法来执行正则表达式。\n\n```js\n// 1、实例\nlet re = /(\\w+)\\s(\\w+)/;\nlet str = \"John Smith\";\nlet newstr = str.replace(re, \"$2, $1\");\nconsole.log(newstr);\n// 输出为：Smith, John\n```\n\n```js\n// 2、实例\nvar str = 'For more information, see Chapter 3.4.5.1';\nvar re = /see (chapter \\d+(\\.\\d)*)/i;\nvar found = str.match(re);\n\nconsole.log(found);\n```\n\n---\n\n##### 三、参考文档\n\n- [Regular_Expressions  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions)\n- [RegExp  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/RegExp)\n\n\n","url":"https://learn-anything.cn/java-script-regexp","published_at":"2021-12-26T03:42:09.000Z","tags":[{"name":"JavaScript","slug":"java-script"},{"name":"正则表达式","slug":"reg-exp"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解JavaScript的正则表达式","slug":"java-script-regexp"}},
    "staticQueryHashes": ["63159454"]}