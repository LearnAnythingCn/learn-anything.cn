{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-iterator",
    "result": {"data":{"strapiArticles":{"id":"Articles_483","title":"JavaScript对象怎么实现迭代(iterator)功能？","description":"可迭代对象， 需要具备  `Symbol.iterator`  和  `next`  这两个函数，即可用 `for...of` 进行迭代。譬如：String、Array、TypedArray、Map 和 Set，都是可迭代对象。","content":"##### 一、迭代功能是什么？\n\n可迭代对象， 需要具备  `Symbol.iterator`  和  `next`  这两个函数，即可用 `for...of` 进行迭代。譬如：String、Array、TypedArray、Map 和 Set，都是可迭代对象。\n\n```js\nvar myIterator = {\n    next: function() {\n        // ...\n    },\n    [Symbol.iterator]: function() { return this }\n}\n```\n\n---\n\n##### 二、怎么用？\n\n###### 1、转换 class 为迭代对象\n\n```html\n<!DOCTYPE html>\n<html lang='zh-CN'>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Symbol</title>\n    <script>\n        class SimpleClass {\n            constructor(data) {\n                this.data = data\n            }\n\n            [Symbol.iterator]() {\n                let index = 0;\n                return {\n                    next: () => {\n                        if (index < this.data.length) {\n                            return { value: this.data[index++], done: false }\n                        } else {\n                            return { done: true }\n                        }\n                    }\n                }\n            }\n        }\n\n        const simple = new SimpleClass([1, 2, 3, 4, 5])\n\n        for (const val of simple) {\n            console.log(val)   //'1' '2' '3' '4' '5'\n        }\n\n    </script>\n</head>\n\n<body>\n    <h1>Symbol : 打开 Console 看结果！</h1>\n</body>\n\n</html>\n```\n\n---\n\n###### 2、转换 object 为迭代对象\n\n```html\n<!DOCTYPE html>\n<html lang='zh-CN'>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>Symbol</title>\n    <script>\n        let SimpleClass = {\n            data: [1, 2, 3, 4, 5],\n            [Symbol.iterator]() {\n                let index = 0;\n                return {\n                    next: () => {\n                        if (index < this.data.length) {\n                            return { value: this.data[index++], done: false }\n                        } else {\n                            return { done: true }\n                        }\n                    }\n                }\n            }\n        }\n\n        for (const val of SimpleClass) {\n            console.log(val)   //'1' '2' '3' '4' '5'\n        }\n\n    </script>\n</head>\n\n<body>\n    <h1>Symbol : 打开 Console 看结果！</h1>\n</body>\n\n</html>\n```\n\n---\n\n##### 三、参考文章\n\n- [Iteration_protocols  -  MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols)\n\n- [iterators-generators](https://2ality.com/2013/06/iterators-generators.html)\n\n\n","url":"https://learn-anything.cn/java-script-iterator","published_at":"2021-12-20T01:50:55.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"JavaScript对象怎么实现迭代(iterator)功能？","slug":"java-script-iterator"}},
    "staticQueryHashes": ["63159454"]}