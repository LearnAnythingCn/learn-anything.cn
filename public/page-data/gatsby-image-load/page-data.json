{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/gatsby-image-load",
    "result": {"data":{"strapiArticles":{"id":"Articles_347","title":"Gatsby中怎么加载图片？","description":"Gatsby中图片分为本地图片、远程网络图片、数据层节点中的图片节点，访问方式不同。","content":"##### 一、Gatsby页面怎么加载图片？\n\n在编写网站页面时，总是会遇到有图片要显示，那么怎么加载这些图片呢？\n\n###### 1、Gatsby 中图片有三种形式：\n\n- 本地图片，譬如 ： `src/images` 目录下的图片；\n- 远程网络图片，譬如 ：`https://learn-anything.cn/static/cf1d0cf910dcc988ea869d56609eca53/096ec/bainian.webp`\n\n- Gatsby 数据层中的图片节点。\n\n---\n\n##### 二、加载本地和网络图片\n\nGatsby 下是通过 StaticImage 组件来加载图片。\n\n###### 1、StaticImage\n\n- 安装插件\n\n  ```\n  npm install gatsby-plugin-image gatsby-plugin-sharp gatsby-source-filesystem\n  ```\n\n- 增加配置\n\n  ```js\n  // gatsby-config.js\n  module.exports = {\n    siteMetadata: {\n      title: \"My First Gatsby Site\",\n    },\n    plugins: [\n      \"gatsby-plugin-image\",\n      \"gatsby-plugin-sharp\",\n    ],\n  };\n  ```\n\n- 显示图片\n\n  StaticImage 是 gatsby-plugin-image 提供的组件，类似html 中的 img 标签，可以在页面中直接使用。\n\n  ```js\n  import * as React from 'react'\n  import Layout from '../components/layout'\n  import { StaticImage } from 'gatsby-plugin-image'\n  import bainian from \"../images/bainian.jpg\"\n  \n  const IndexPage = () => {\n      return (\n          <Layout pageTitle=\"Home Page\">\n              <p>I'm making this by following the Gatsby Tutorial.</p>\n              <StaticImage\n                  alt=\"网络图片\"\n                  src=\"https://learn-anything.cn/static/cf1d0cf910dcc988ea869d56609eca53/096ec/bainian.webp\"\n              />\n              <StaticImage\n                  alt=\"本地图片\"\n                  src=\"../images/bainian.jpg\"\n              />\n        \t\t\t<img alt=\"img显示本地图片\" src={bainian} />\n          </Layout>\n      )\n  }\n  \n  export default IndexPage\n  ```\n\n---\n\n###### 2、StaticImage 与 img\n\n- `<img/>` 与 `<StaticImage/>`  区别  ：StaticImage 组件对图像做了预处理，会根据显示器不同而选择适合的分辨率进行图片渲染，无需下载原图，加快显示速度也节约网络流量。\n\n- `<img/>` 在 gatsby 中的使用实例：\n\n  ```js\n  import React from \"react\"\n  import logo from \"./logo.png\" // 这里告诉 Webpack 这个 JS 文件用了这张图片\n  console.log(logo) // /logo.84287d09.png\n  function Header() {\n    // 引入得到的是你的图片 URL\n    return <img src={logo} alt=\"Logo\" />\n  }\n  export default Header\n  ```\n\n---\n\n###### 3、borderRadius 失效\n\n如下使用 style 中的 borderRadius 给图片增加圆角边框，此法在 safari 浏览器会失效。\n\n```js\n<StaticImage src=\"../images/bainian.jpg\" alt=\"百念牙膏\" style={{border: 'solid 1px #ddd', borderRadius: 10}}/>\n```\n\n解决方案：用  imgStyle  代替  style。\n\n```js\n<StaticImage src=\"../images/bainian.jpg\" alt=\"百念牙膏\" imgStyle={{border: 'solid 1px #ddd', borderRadius: 10}}/>\n```\n\n---\n\n##### 三、加载数据层图片节点\n\n数据层图片节点称之为动态图片，在项目启动时，gatsby会自动从源数据中下载图片，并转换为数据层中图片节点，下面详解 `图片文件`  ->  `数据层图片节点` 的过程。\n\n###### 1、原理说明：\n\n- 本地文件通过 `gatsby-source-filesystem`  插件，转为数据层节点 allFile；\n\n- 数据层节点 allFile 中的图像节点， 通过  `gatsby-transformer-sharp`  插件，转为数据层节点  ImageSharp；\n\n- 使用 Graphql  查询 ImageSharp 节点数据，传递给  `gatsby-plugin-image`  插件提供的组件 `GatsbyImage`  进行显示。\n\n- 【备注】：gatsby-transformer-sharp 插件会为所有数据层节点的image属性增加  ImageSharp  图片节点。譬如 `gatsby-source-strapi` 插件从strapi 获取数据生成 allStrapiArticles 节点，`gatsby-transformer-sharp`  也会为其 image 属性自动生成图片节点：image.localFile.childImageSharp.\n\n![ImageSharp Node](http://static.learn-anything.cn/ImageSharp.png)\n\n\n---\n\n##### 四、显示 `数据层图片节点`\n\n###### 1、实例情况说明\n\ngatsby 项目中有 `src/mdx/my-first-post.mdx` 文件  和 `src/mdx/christopher-ayme-ocZ-_Y7-Ptg-unsplash.jpg` 图片，写一个页面可以展示其数据和图片。\n\n```\n// src/mdx/my-first-post.mdx\n---\ntitle: \"My First Post\"\ndate: \"2021-07-23\"\nhero_image: \"./christopher-ayme-ocZ-_Y7-Ptg-unsplash.jpg\"\nhero_image_alt: \"A gray pitbull relaxing on the sidewalk with its tongue hanging out\"\nhero_image_credit_text: \"Christopher Ayme\"\nhero_image_credit_link: \"https://unsplash.com/photos/ocZ-_Y7-Ptg\"\n---\n\nThis is my first blog post! Isn't it *great*?\nSome of my **favorite** things are:\n* Petting dogs\n* Singing\n* Eating potato-based foods\n```\n\n---\n\n###### 2、解决方案\n\n- 第一步：把 .mdx 文件转换为 MDX 数据节点，安装下面插件\n\n  ```shell\n  npm install gatsby-source-filesystem gatsby-plugin-mdx @mdx-js/mdx @mdx-js/react gatsby-transformer-sharp gatsby-plugin-image\n  ```\n\n- 第二步：修改 gatsby-config.js  中的配置\n\n  ```js\n  // gatsby-config.js\n  module.exports = {\n    plugins: [\n      {\n        resolve: `gatsby-source-filesystem`,\n        options: {\n          name: `posts`,\n          path: `${__dirname}/src/mdx/`,\n        },\n      },\n      {\n        resolve: `gatsby-plugin-mdx`,\n        options: {\n          extensions: [`.mdx`, `.md`]\n        },\n      },\n      \"gatsby-transformer-sharp\",\n      \"gatsby-plugin-image\"\n    ],\n  }\n  ```\n\n- 第三步：新建页面  `src/pages/first-post.js`，页面的名字来之 `.mdx` 文件对应mdx 节点的slug属性（mdx路由规则）。\n\n  ```js\n  import * as React from 'react'\n  import { graphql } from 'gatsby'\n  import { MDXRenderer } from 'gatsby-plugin-mdx'\n  import { GatsbyImage, getImage } from 'gatsby-plugin-image'\n  \n  const BlogPost = ({ data }) => {\n  \n    console.log(\"BlogPost :\", data);\n    const image = getImage(data.mdx.frontmatter.hero_image)\n  \n    return (\n      <div >\n        <p>Title: {data.mdx.frontmatter.title}</p>\n        <p>Posted: {data.mdx.frontmatter.date}</p>\n        <GatsbyImage\n          image={image}\n          alt={data.mdx.frontmatter.hero_image_alt}\n        />\n        <MDXRenderer>\n          {data.mdx.body}\n        </MDXRenderer>\n      </div>\n    )\n  }\n  \n  export const query = graphql`\n      query($id: String) {\n        mdx(id: {eq: $id}) {\n          body\n          frontmatter {\n            title\n            hero_image_alt\n            hero_image_credit_link\n            hero_image_credit_text\n            hero_image {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    `\n  \n  export default BlogPost\n  ```\n\n- 第四步：浏览器访问：`http://localhost:8000/first-blog`，查看页面显示图片和 `.mdx` 内容。\n\n---\n\n##### 五、显示 strapi 中包含的图片\n\n###### 1、问题说明\n\nstrapi  是可视化的 CMS(内容管理系统)，markdown编辑的文档，可以很方便存储在 strapi中，且提供了RestApi访问存储是数据。怎么在gatsby中访问 strapi 中数据？\n\n---\n\n###### 2、解决方案\n\n借助插件 `gatsby-source-strapi` 把strapi中数据转为 gatsby 数据节点，方便访问。\n\n- 第一步：把 strapi 中 articles 数据转换为 gatsby 数据节点，安装下面插件\n\n  ```shell\n  npm install gatsby-source-strapi gatsby-transformer-sharp gatsby-plugin-image\n  ```\n\n- 第二步：修改 gatsby-config.js  中的配置\n\n  ```js\n  // gatsby-config.js\n  module.exports = {\n    plugins: [\n      {\n        resolve: `gatsby-source-strapi`,\n        options: {\n          // apiURL: \"http://localhost:1337\",\n          queryLimit: 1000,\n          collectionTypes: [`articles`],\n        },\n      },\n      \"gatsby-transformer-sharp\",\n      \"gatsby-plugin-image\"\n    ],\n  }\n  ```\n\n- 第三步：新建页面  `src/pages/homepage.js`\n\n  ```js\n  import * as React from \"react\"\n  import { graphql } from \"gatsby\"\n  import { GatsbyImage } from \"gatsby-plugin-image\"\n  \n  const HomePage = ({ data }) => {\n      return (\n          <GatsbyImage image={data.strapiArticles.image.localFile.childImageSharp.gatsbyImageData} />\n      )\n  }\n  \n  export default HomePage\n  \n  export const query = graphql`{\n      strapiArticles {\n          image {\n            localFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n    }\n  `\n  ```\n\n- 第四步：浏览器访问：`http://localhost:8000/homepage`，查看内容\n\n---\n\n##### 六、参考文档\n\n- [gatsby-plugin-image - 官方文档](https://www.gatsbyjs.com/plugins/gatsby-plugin-image/)\n- [gatsby-plugin-image - 详细文档](https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image/)\n- [gatsby-transformer-sharp - 官方文档](https://www.gatsbyjs.com/plugins/gatsby-transformer-sharp/)\n- [gatsby-plugin-sharp - 官方文档](https://www.gatsbyjs.com/plugins/gatsby-plugin-sharp/)\n- [using-gatsby-plugin-image](https://www.gatsbyjs.com/docs/how-to/images-and-media/using-gatsby-plugin-image/)\n\n\n","url":"https://learn-anything.cn/gatsby-image-load","published_at":"2021-11-08T10:00:53.000Z","tags":[{"name":"Gatsby","slug":"gatsby"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"Gatsby中怎么加载图片？","slug":"gatsby-image-load"}},
    "staticQueryHashes": ["63159454"]}