{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/react-compent-state",
    "result": {"data":{"strapiArticles":{"id":"Articles_106","title":"React的受控组件用法详解！","description":"React中受控组件有哪些？什么样的组件称之为受控组件？怎么使用？","content":"#### 一、受控组件是什么？\n\n用state来获取和设置输入元素值的组件，称之为`受控组件`。`<input type=\"text\">`, `<textarea>` 和 `<select>` 等标签都可用 `value` 属性，来实现受控组件。\n\n---\n\n#### 二、有哪些受控组件？\n\n##### 1、input\n\n###### - 阻止表单提交\n\n```js\nclass NameForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: '' };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        alert('提交的名字: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    名字:\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"提交\" />\n            </form>\n        );\n    }\n}\n```\n\n###### - file类型input\n\n```js\n// file类型的input，属性value是只读的，所以是非受控组件\n<input type=\"file\" />\n```\n\n###### - 多个input\n\n```js\n// 多个input时，设置下name属性，即可动态操作，无需硬编码\nclass Reservation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isGoing: true,\n            numberOfGuests: 2\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n        return (\n            <form>\n                <label>\n                    参与:\n                    <input\n                        name=\"isGoing\"\n                        type=\"checkbox\"\n                        checked={this.state.isGoing}\n                        onChange={this.handleInputChange} />\n                </label>\n                <br />\n                <label>\n                    来宾人数:\n                    <input\n                        name=\"numberOfGuests\"\n                        type=\"number\"\n                        value={this.state.numberOfGuests}\n                        onChange={this.handleInputChange} />\n                </label>\n            </form>\n        );\n    }\n}\n```\n\n---\n\n##### 2、textarea\n\n用value属性来设置textarea的文本内容：\n\n```jsx\nclass EssayForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: '请撰写一篇关于你喜欢的 DOM 元素的文章.'\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        alert('提交的文章: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    文章:\n                    <textarea value={this.state.value} onChange={this.handleChange} />\n                </label>\n                <input type=\"submit\" value=\"提交\" />\n            </form>\n        );\n    }\n}\n```\n\n---\n\n##### 3、select\n\n 传统HTML中，用  `selected`  来设置选中项，而在React中使用 `value` 属性：\n\n```js\n// HTML中使用selected属性\n< select >\n  <option value=\"grapefruit\">葡萄柚</option>\n  <option value=\"lime\">酸橙</option>\n  <option selected value=\"coconut\">椰子</option>\n  <option value=\"mango\">芒果</option>\n</select >\n```\n\n```js\n// React中使用value属性\nclass FlavorForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { value: 'coconut' };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        alert('你喜欢的风味是: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <label>\n                    选择你喜欢的风味:\n                    <select value={this.state.value} onChange={this.handleChange}>\n                        <option value=\"grapefruit\">葡萄柚</option>\n                        <option value=\"lime\">酸橙</option>\n                        <option value=\"coconut\">椰子</option>\n                        <option value=\"mango\">芒果</option>\n                    </select>\n                </label>\n                <input type=\"submit\" value=\"提交\" />\n            </form>\n        );\n    }\n}\n```\n\n```js\n// 传递数组给value属性，表示select标签，选中多个选项\n<select multiple={true} value={['B', 'C']}>\n```\n\n\n","url":"https://learn-anything.cn/react-compent-state","published_at":"2021-10-08T05:11:38.000Z","tags":[{"name":"React","slug":"react"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"React的受控组件用法详解！","slug":"react-compent-state"}},
    "staticQueryHashes": ["63159454"]}