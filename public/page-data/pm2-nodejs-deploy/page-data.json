{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/pm2-nodejs-deploy",
    "result": {"data":{"strapiArticles":{"id":"Articles_166","title":"PM2一键搞定，多台服务器同时部署发布Node.js项目！","description":"在 node.js 项目部署发布时，经常用 SSH 分别连接多台服务器，对每一台服务器都要执行 git pull 最新代码，编译启动应用的操作，操作琐碎且容易忘记其中某些操作。pm2 可以很好解决这个问题，只需一个命令就可以自动完成，还能实时监控、查看 node.js 应用的运行情况。","content":"##### 一、使用场景\n\n在 node.js 项目部署发布时，经常用 SSH 分别连接多台服务器，对每一台服务器都要执行 git pull 最新代码，编译启动应用的操作，操作琐碎且容易忘记其中某些操作。pm2 可以很好解决这个问题，只需一个命令就可以自动完成，还能实时监控、查看 node.js 应用的运行情况。\n\n---\n\n##### 二、解决方案\n\n###### 第一步：服务器环境配置\n\n- 安装 node.js ：[不会，看这里！](https://learn-anything.cn/node-js-nvm)\n- 安装 pm2 ：`npm install pm2@latest -g`   或   `yarn global add pm2`\n- 安装 git ：[不会，看这里](https://learn-anything.cn/git-github)\n- 配置 SSH，使得服务器可以免密运行 `git clone`，[不会，看这里！](https://learn-anything.cn/git-github)\n\n###### 第二步：开发机器环境配置\n\n- 安装 node.js ：[不会，看这里！](https://learn-anything.cn/node-js-nvm)\n- 安装 pm2 ：`npm install pm2@latest -g`   或   `yarn global add pm2`\n- 配置SSH，免密登录服务器，[不会，看这里！](https://learn-anything.cn/ssl-tls-http-https-ssh#2-ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95)\n\n###### 第三步：node.js 项目操作步骤配置\n\n1. 打开终端，切换到 node.js 项目根目录，执行 `pm2 ecosystem`  ， 生成配置文件  ，如下：\n\n   ```js\n   // ecosystem.config.js\n   module.exports = {\n       apps: [{\n           script: 'index.js',\n           watch: '.',\n           env_production: {\n               NODE_ENV: \"production\"\n           },\n           env_development: {\n               NODE_ENV: \"development\"\n           }\n       }],\n     \n   \t\t// Deployment Configuration\n       deploy: {\n           production: {\n               user: 'SSH_USERNAME',\n               host: 'SSH_HOSTMACHINE',\n               ref: 'origin/master',\n               repo: 'GIT_REPOSITORY',\n               path: 'DESTINATION_PATH',\n               'pre-deploy-local': '',\n               'post-deploy': 'npm install && pm2 reload ecosystem.config.js --env production',\n               'pre-setup': ''\n           }\n       }\n   }\n   ```\n\n2. 修改上面配置文件，为正确服务器、git相关信息；\n\n3. 在  `ecosystem.config.js`  所在目录执行下面命令，初始化 node.js 项目 到服务器\n\n   ```js\n   pm2 deploy production setup\n   // pm2 连接服务器，通知其 git clone 代码等初始化工作。\n   ```\n\n4. 启动 或 更新  node.js 项目：\n\n   ```js\n   pm2 deploy production --force;\n   // 让服务器 git pull 代码，编译后启动应用\n   // --force 的作用：如果服务器本地代码有改动，那么放弃改动，用git仓库最新代码更新项目。\n   ```\n\n---\n\n##### 三、deploy 命令详解\n\n###### 1、命令格式\n\n```\npm2 deploy <configuration_file> <environment> <command>\n```\n\n---\n\n###### 2、configuration_file\n\n如果配置文件名是：`ecosystem.config.js`  或者  `pm2.config.js`  ，上面命令可以不用写  `<configuration_file>`。\n\n```js\npm2 deploy production setup\n// 此命令就是默认寻找 ecosystem.config.js  或  pm2.config.js  配置文件执行\n```\n\n---\n\n###### 3、environment\n\n在配置文件中设定 `env_production` 和 `env_development`  ，就可以在执行命令时调用，把环境变量传递给node.js 项目：`pm2 deploy production --force;`\n\n```js\n// ecosystem.config.js\nmodule.exports = {\n    apps: [{\n        script: 'index.js',\n        watch: '.',\n        env_production: {\n            NODE_ENV: \"production\"\n        },\n        env_development: {\n            NODE_ENV: \"development\"\n        }\n    }],\n}\n```\n\n---\n\n###### 4、command\n\n```shell\nsetup                \trun remote setup commands\nupdate               \tupdate deploy to the latest release\nrevert[n]           \trevert to[n]th last deployment or 1\ncurr[ent]            \toutput current release commit\nprev[ious]           \toutput previous release commit\nexec | run < cmd > \t\texecute the given < cmd >\nlist                 \tlist previous deploy commits\n[ref]                \tdeploy to[ref], the \"ref\" setting, or latest tag\n```\n\n---\n\n##### 四、其他重要事项\n\n###### 1、exec可以让所有服务器执行一次命令\n\n```shell\npm2 deploy production exec \"pm2 reload all\"\n```\n\n###### 2、回滚到上一个部署版本\n\n```shell\npm2 deploy production revert 1\n```\n\n###### 3、部署的几个时间点\n\n```shell\n\"pre-setup\"         : \"在setup执行前 运行的 命令或脚本\",\n\"post-setup\"        : \"在代码clone完成后 执行的命令或脚本\",\n\"pre-deploy\"        : \"pm2 startOrRestart ecosystem.json --env production\",\n\"post-deploy\"       : \"pm2 startOrRestart ecosystem.json --env production\",\n\"pre-deploy-local\"  : \"echo 'This is a local executed command'\"\n```\n\n###### 4、操作多台服务器，只需修改host\n\n```js\n\"host\" : [\"212.83.163.1\", \"212.83.163.2\", \"212.83.163.3\"],\n```\n\n---\n\n##### 五、报错\n\n###### 1、报错信息\n\n```shell\nnpm: command not found\npost-deploy hook failed\nDeploy failed\n```\n\n###### 2、解决方案\n\npm2 部署时，出现上面错误，但运行  `npm -v`  都是正常的，原因是 pm2 的配置文件，按照下面步骤即可解决。\n\n```shell\n# 1、打开终端\n$ cd ~\n$ nano .bashrc\n\n# 2、把下面内容注释掉\n#If not running interactively, don 't do anything\ncase $ - in\n*\ni * );;\n*) return;;\nesac\n\n# 3、更新环境变量\n$ source .bashrc\n```\n\n---\n\n##### 六、参考文档\n\n- [deployment - 官方文档](https://pm2.keymetrics.io/docs/usage/deployment/)","url":"https://learn-anything.cn/pm2-nodejs-deploy","published_at":"2021-10-26T12:32:50.000Z","tags":[{"name":"PM2","slug":"pm2"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"PM2一键搞定，多台服务器同时部署发布Node.js项目！","slug":"pm2-nodejs-deploy"}},
    "staticQueryHashes": ["63159454"]}