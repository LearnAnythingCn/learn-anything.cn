{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/nginx-start",
    "result": {"data":{"strapiArticles":{"id":"Articles_429","title":"学习Nginx，从这里开始！","description":"Ubuntu系统下怎么安装和使用Nginx？怎么配置静态服务器和代理服务器？怎么使用缓存和压缩来提升性能？","content":"##### 一、简介\n\n###### 1、安装\n\n- Ubuntu、RHEL/CentOS、Debian 上安装 Nginx，[看这里！](https://learn-anything.cn/nginx-setup)\n- Mac 上安装 Nginx，[看这里！](https://learn-anything.cn/mac-nginx)\n\n---\n\n###### 2、配置文件\n\nNginx 配置相关的内容，[详情，看这里！](https://learn-anything.cn/nginx-conf)\n\n---\n\n###### 3、日志文件\n\n```shell\n# 1、nginx的日志目录\n/var/log/nginx\n\n# 2、把远程Ubuntu机器上nginx的日志拷贝到本机命令：\nscp user@47.93.238.119:/var/log/nginx/error.log ~/logs\n```\n\n---\n\n###### 4、常用命令\n\n```shell\n# 1、启动：\nsudo /etc/init.d/nginx start\n\n# 2、重启：\nsudo /etc/init.d/nginx restart\n\n# 3、重新加载配置文件，无需重启：\nsudo /etc/init.d/nginx reload\n```\n\n---\n\n##### 二、实际使用场景\n\n###### 1、配置一个静态服务器\n\n用 Nginx 配置一个静态服务器的全过程。\n\n- 服务器一台，Ubuntu系统；\n- 域名一个：`www.learn-anything.cn`，运营商后台设置指向服务器ip；\n- 安装 Nginx；\n\n- 配置文件的设置如下：\n\n```shell\n# 1、新建配置文件\ncd /etc/nginx/sites-available\nsudo cp default www.learn-anything.cn\nsudo nano www.learn-anything.cn\n\n# 2、按照下面配置修改，注意 server_name 和 root 一定要设置正确。\nserver {\n        listen 80 default_server;\n        listen [::]:80 default_server;\n        root /var/www/html;\n        index index.html index.htm index.nginx-debian.html;\n        server_name www.learn-anything.cn;\n        location / {\n                # First attempt to serve request as file, then\n                # as directory, then fall back to displaying a 404.\n                try_files $uri $uri/ =404;\n        }\n}\n\n# 3、建立软连接，开启网站\ncd /etc/nginx/sites-available\nln -s www.learn-anything.cn ../sites-enabled/www.learn-anything.cn\n\n# 4、把网站代码拷贝到上面设置的root路径下，同时修改下文件访问权限\nsudo chmod -R 754 [这里是root路径]\n\n# 5、重新 nginx \nsudo /etc/init.d/nginx restart\n\n# 6、用域名访问即可。\n```\n\n---\n\n###### 2、配置一个代理服务器\n\n配置一个代理服务器，过程和上面一模一样，只是把配置文件稍微修改一下即可。\n\n```\nserver {\n    listen 80 default_server;\n    listen [::]:80 default_server;\n    # 域名\n    server_name www.learn-anything.cn;\n    location / {\n        proxy_redirect off;\n        proxy_connect_timeout 30;\n        proxy_send_timeout 30;\n        proxy_read_timeout 60;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # 源服务器 URL\n        proxy_pass http://127.0.0.1:8888;\n    }\n    error_page 404 /404.html;\n}\n```\n\n---\n\n###### 3、负载均衡\n\n```\nhttp {\n    upstream myapp1 {\n        server srv1.example.com;\n        server srv2.example.com;\n        server srv3.example.com;\n    }\n\n    server {\n        listen 80;\n\n        location / {\n            proxy_pass http://myapp1;\n        }\n    }\n}\n```\n\n- [load_balancing  -  官方文档](http://nginx.org/en/docs/http/load_balancing.html)\n\n---\n\n###### 4、使用压缩，提升性能\n\nHTTP 可以对传输的内容进行压缩，减少网络实际传输数据的大小。原理就是 服务器对文件进行 gzip 压缩后，再进行传输，浏览器收到资源后再解压的过程。\n\n- 对于 js、text、json、css 这种纯文本进行压缩，效果特别好，不用改变代码即可提升网站响应速度；\n- 压缩过程是需要花费 CPU 资源的，对大文件(图片、音乐等)进行压缩，不仅不能提升网站响应速度，还会增加服务器压力，让网站有明显的卡顿感。[详情，看这里！](https://learn-anything.cn/http-gzip)\n\n---\n\n###### 5、使用缓存，提升性能\n\n有关 Nginx 的缓存分两种情况：\n\n- 私有缓存：作为静态网站服务器，设置Cache-Control头，让浏览器对页面资源进行缓存；\n- 共享缓存：作为代理服务器，把源服务器返回的资源缓存到本地；[详情，看这里！](https://learn-anything.cn/nginx-cache)\n\n---\n\n###### 6、HTTP 升级为 HTTPS\n\n免费把网站从 HTTP  升级为 HTTPS，[详情，看这里！](https://learn-anything.cn/http-https-cerbot)\n\n---\n\n##### 四、常见错误\n\n###### 1、80端口被占用\n\n```shell\n Starting nginx: [emerg]: bind() to 0.0.0.0:80 failed (98: Address already in use) \n```\n\n修改配置文件中 listen 的端口号。\n\n---\n\n###### 2、403错误\n\n检查nginx配置文件里的网站路径是否正确。\n\n---\n\n##### 五、参考文档\n\n- [nginx - wiki - 官方](https://www.nginx.com/resources/wiki/)\n\n\n","url":"https://learn-anything.cn/nginx-start","published_at":"2021-12-03T11:15:22.000Z","tags":[{"name":"Nginx","slug":"nginx"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"学习Nginx，从这里开始！","slug":"nginx-start"}},
    "staticQueryHashes": ["63159454"]}