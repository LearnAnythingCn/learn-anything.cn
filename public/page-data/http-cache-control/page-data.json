{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/http-cache-control",
    "result": {"data":{"strapiArticles":{"id":"Articles_420","title":"HTTP协议中的Cache-Control头，怎么用？","description":"Cache-Control  是 HTTP 协议的请求头和响应头，用于实现缓存功能。单个请求可包含多个指令，用逗号隔开，指令不区分大小写但建议小写。","content":"##### 一、Cache-Control 是什么？\n\nCache-Control  是 HTTP 协议的请求头和响应头，用于实现缓存功能。单个请求可包含多个指令，用逗号隔开，指令不区分大小写但建议小写。\n\n---\n\n###### 1、请求头中缓存指令\n\n```\nCache-Control: max-age=<seconds>\nCache-Control: max-stale[=<seconds>]\nCache-Control: min-fresh=<seconds>\nCache-control: no-cache\nCache-control: no-store\nCache-control: no-transform\nCache-control: only-if-cached\n```\n\n---\n\n###### 2、响应头中的缓存指令\n\n```\nCache-control: must-revalidate\nCache-control: no-cache\nCache-control: no-store\nCache-control: no-transform\nCache-control: public\nCache-control: private\nCache-control: proxy-revalidate\nCache-Control: max-age=<seconds>\nCache-control: s-maxage=<seconds>\n```\n\n---\n\n###### 3、指令说明\n\n- no-store  ：不使用缓存，每一次请求都重新下载全部内容；\n- no-cache  ：每次访问资源，都需要发送验证请求，没失效就使用缓存，失效就用服务器返回的新数据。\n- private  ：默认是private，只能被单个用户缓存(浏览器缓存)，不能用于代理服务器的共享缓存。\n- public  ：所有请求方都可以使用缓存。\n\n\n\n- max-age  ：缓存的过期时间，单位是秒，请求时间作为起始时间。\n- s-maxage  ：缓存有效时长，仅用于共享缓存，会覆盖  max-age  和 Expires，单位是秒。\n- max-stale  ：设置过期时长，不超过这个时长的过期资源可以被使用。\n- min-fresh  ：表示客户端希望获取一个能在指定的秒数内保持其最新状态的响应。\n- stale-while-revalidate  ：表明客户端愿意接受陈旧的响应，同时在后台异步检查新的响应。秒值指示客户愿意接受陈旧响应的时间长度。\n- stale-if-error  ：表示如果新的检查失败，则客户愿意接受陈旧的响应。秒数值表示客户在初始到期后愿意接受陈旧响应的时间。\n\n\n\n- must-revalidate  ：一旦资源过期（比如已经超过max-age），在成功向原始服务器验证之前，缓存不能用该资源响应后续请求。\n- proxy-revalidate  ：与must-revalidate作用相同，但只用于共享缓存。\n- immutable  ：表示响应正文不会随时间而改变。资源未过期无需发送验证请求。\n\n\n\n- no-transform  ：不得对资源进行转换或转变。Content-Encoding、Content-Range、Content-Type等HTTP头不能由代理修改。例如，非透明代理或者如Google's Light Mode可能对图像格式进行转换，以便节省缓存空间或者减少缓慢链路上的流量。no-transform指令不允许这样做。\n- only-if-cached  ：表明客户端只接受已缓存的响应，并且不要向原始服务器检查是否有更新的拷贝。\n\n---\n\n##### 二、常用场景\n\n###### 1、使用缓存前必须验证\n\n浏览器使用缓存用前必须发送请求，服务器验证缓存是否有改动？只返回头信息不包含实际内容，告诉浏览器使用缓存显示即可。\n\n```\n// 下面两个命令功能相同\nCache-Control: no-cache\nCache-Control: max-age=0, must-revalidate\n```\n\n###### 2、静态资源\n\n对于不会改变的静态资源，过期时间可以放长一些\n\n```\n// 有效期一年\nCache-Control:public, max-age=31536000\n```\n\n###### 3、禁用缓存\n\n```\nCache-Control: no-store\n```\n\n---\n\n##### 三、参考文档\n\n- [Cache-Control  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control)\n\n\n","url":"https://learn-anything.cn/http-cache-control","published_at":"2021-11-29T10:47:19.000Z","tags":[{"name":"http/https","slug":"http-https"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"HTTP协议中的Cache-Control头，怎么用？","slug":"http-cache-control"}},
    "staticQueryHashes": ["63159454"]}