{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-tattle",
    "result": {"data":{"strapiArticles":{"id":"Articles_524","title":"JavaScript一统江湖的野心！","description":"如今编程语言是百家齐放、万家争鸣，犹如战国时代的群雄割据，各占一隅，逍遥度日。编程语言本质上就是定义一套自己的语法规则，然后通过编译器转换成机器可以运行指令，没有孰好孰坏，使用场景不同，没有必要上纲上线，只要能帮你解决问题，就是好语言，好工具。","content":"如今编程语言是百家齐放、万家争鸣，犹如战国时代的群雄割据，各占一隅，逍遥度日。\n\n编程语言本质上就是定义一套自己的语法规则，然后通过编译器转换成机器可以运行指令，没有孰好孰坏，使用场景不同，没有必要上纲上线，只要能帮你解决问题，就是好语言，好工具。\n\n程序员之苦，在于每天都会有新的语言、新的规则被制定，要想程序能够良好运行，就必须去了解这些规则；程序员之幸，在于每天都有人在挠破头创造新语言，帮你解决一些编程极限问题，或是运行效率、或是运行bug...\n\n最新被逼无奈学习了 JavaScript，越深入越觉得前辈们付出的不易。\n\n浏览器本只是一个解析 html 文件格式的软件，而 JavaScript 也只是被定义成与浏览器交互的语言格式，经过多年发展，JavaScript 已不满足于浏览器的运行环境，Node.js 应运而生，至此有一统江湖的意思。\n\nNode.js 定义了一套自己的语法规则(以JavaScript为基础)，把 JavaScript 编写的代码转换为操作系统可以执行的指令。那么只需要懂的 JavaScript 语法规则，就可以与操作系统进行交互，哇塞，好棒！\n\n有人会说，经过多次封装，运行效率是个问题。的确，运行效率无法直接与c、c++相提并论，但在硬件发展的支持下，很多场景可以忽略这种运行效率。\n\n至于运行效率，前辈们也在尝试解决，WebAssembly 就是一个解决方案。\n\n至于编译器，Visual Studio Code 也有一统江湖之意，通过插件的方式，支持各种语言。\n\n好了，没有孰好孰坏，只是我喜欢以一敌百的解决方案！\n\n\n\n个人感悟，如有理解错误，洗耳恭听，不喜勿喷！","url":"https://learn-anything.cn/java-script-tattle","published_at":"2021-12-25T09:46:32.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"JavaScript一统江湖的野心！","slug":"java-script-tattle"}},
    "staticQueryHashes": ["63159454"]}