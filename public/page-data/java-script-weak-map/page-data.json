{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-weak-map",
    "result": {"data":{"strapiArticles":{"id":"Articles_517","title":"详解JavaScript的WeakMap数据结构","description":"WeakMap 对象是键/值对的集合，键必须是 `Object` 类型，值可以是任意类型，当没有地方引用键所指对象时，它会被 GC 回收，因此 WeakMap 键值是无法预知的，由垃圾回收器(GC)决定。","content":"##### 一、WeakMap 是什么？\n\nWeakMap 对象是键/值对的集合，键必须是 `Object` 类型，值可以是任意类型，当没有地方引用键所指对象时，它会被 GC 回收，因此 WeakMap 键值是无法预知的，由垃圾回收器(GC)决定。\n\n###### 1、WeakMap 与 Map\n\nMap 会对键所指对象进行引用，所以此对象就不会被 GC 回收，会造成内存泄露；而WeakMap 对键所指对象是弱引用，只要对象在其他地方没有被引用，那么就会被GC回收。\n\n- 如果想自己管理对象的生命周期，使用 Map，但注意即时清除无用对象，避免内存泄露；\n\n- 如果不想自己管理对象，就使用 WeakMap，让GC处理，不会产生内存泄露；\n\n---\n\n##### 二、怎么用？\n\n由于无法 WeakMap 的键值是否可用，也就无法遍历所有键值，如果确实需要使用键值，那么应该选择 Map。\n\n###### 1、常用方法\n\n```js\nconst wm1 = new WeakMap(),\n      wm2 = new WeakMap(),\n      wm3 = new WeakMap();\nconst o1 = {},\n      o2 = function(){},\n      o3 = window;\n\nwm1.set(o1, 37);\nwm1.set(o2, \"azerty\");\nwm2.set(o1, o2); // value可以是任意值,包括一个对象或一个函数\nwm2.set(o3, undefined);\nwm2.set(wm1, wm2); // 键和值可以是任意对象,甚至另外一个WeakMap对象\n\nwm1.get(o2); // \"azerty\"\nwm2.get(o2); // undefined,wm2中没有o2这个键\nwm2.get(o3); // undefined,值就是undefined\n\nwm1.has(o2); // true\nwm2.has(o2); // false\nwm2.has(o3); // true (即使值是undefined)\n\nwm3.set(o1, 37);\nwm3.get(o1); // 37\n\nwm1.has(o1);   // true\nwm1.delete(o1);\nwm1.has(o1);   // false\n```\n\n---\n\n##### 三、使用案例\n\n###### 1、隐藏实现细节\n\n用 WeakMap 存储私有数据，用来隐藏实施细节。\n\n```js\nconst privates = new WeakMap();\n\nfunction Public() {\n  const me = {\n    // Private data goes here\n  };\n  privates.set(this, me);\n}\n\nPublic.prototype.method = function () {\n  const me = privates.get(this);\n  // Do stuff with private data in `me`...\n};\n\nmodule.exports = Public;\n```\n\n---\n\n###### 2、WeakMap 实现的类\n\n```js\nclass ClearableWeakMap {\n  constructor(init) {\n    this._wm = new WeakMap(init)\n  }\n  clear() {\n    this._wm = new WeakMap()\n  }\n  delete(k) {\n    return this._wm.delete(k)\n  }\n  get(k) {\n    return this._wm.get(k)\n  }\n  has(k) {\n    return this._wm.has(k)\n  }\n  set(k, v) {\n    this._wm.set(k, v)\n    return this\n  }\n}\n```\n\n---\n\n##### 四、参考文档\n\n- [WeakMap  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)\n\n- [Keyed_collections  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Keyed_collections)\n\n- [Hiding Implementation Details with ECMAScript 6 WeakMaps](https://fitzgeraldnick.com/2014/01/13/hiding-implementation-details-with-e6-weakmaps.html)","url":"https://learn-anything.cn/java-script-weak-map","published_at":"2021-12-22T15:07:01.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解JavaScript的WeakMap数据结构","slug":"java-script-weak-map"}},
    "staticQueryHashes": ["63159454"]}