{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/nginx-conf",
    "result": {"data":{"strapiArticles":{"id":"Articles_428","title":"详解Nginx中的配置信息！","description":"Nginx的配置文件详细介绍，包括events、http、server、location等。","content":"##### 一、简介\n\n在 Nginx 上部署一个网站，涉及到4个配置模块：events、http、server、location。\n\n---\n\n###### 1、结构说明\n\nevents 和 http 模块只有一个，但 http 模块可以包含多个 server模块，一个 server模块可包含多个 location模块，一个 server模块 就是一个网站配置。\n\n```\nevents {\n    # ...\n}\n\nhttp {\n    # ...\n    server {\n        location [PATTERN] {\n        }\n        location [PATTERN] {\n        }\n    }\n    server {\n        # ...\n    }\n}\n```\n\n---\n\n###### 2、相关文件\n\n为了让 Nginx 能启动多个配置不同的网站，这4个模块被拆分在不同的文件中进行配置：\n\n- `/etc/nginx/nginx.conf`  ：这里修改  `events 和 http` ，是所有网站的全局配置，同时导入 `sites-enabled` 目录下所有需要启动的 server 模块；\n\n  ```\n  events {\n          worker_connections 768;\n  }\n  \n  http {\n   \t\t\t\t# ...\n   \t\t\t\t\n          include /etc/nginx/sites-enabled/*;\n  }\n  ```\n\n- `/etc/nginx/sites-available/`  ：包含所有网站配置（启动和未启动）。新网站操作步骤：拷贝此目录下的default文件，用网站域名命名，同时修改  `server、location` 内容 ，形成新网站的配置。\n\n- `/etc/nginx/sites-enabled/`  ：都是软连接文件，指向上面具体网站配置文件，告诉Nginx哪些网站需要启动。\n\n  ```\n  # 软连接配置方法\n  cd /etc/nginx/sites-available\n  ln -s www.example.com ../sites-enabled/www.example.com\n  ```\n\n---\n\n##### 二、模块详解\n\n###### 1、events\n\n用于设置Nginx进程的网络连接数。\n\n- [events  -  官方文档](http://nginx.org/en/docs/ngx_core_module.html#events)\n\n---\n\n###### 2、http模块\n\n主要用于设置 http 服务相关的全局配置（日志、缓存、压缩等），可包含多个 server 模块。\n\n- [http  -  官方文档](http://nginx.org/en/docs/http/ngx_http_core_module.html#http)\n\n---\n\n###### 3、server\n\n用于设置网站的具体配置，包括主机名称、监听端口、页面路由等，一个 server 对应一个网站。\n\n- [server  -  官方文档](http://nginx.org/en/docs/http/ngx_http_core_module.html#server)\n- [server_names  -  官方文档](http://nginx.org/en/docs/http/server_names.html)\n\n---\n\n###### 4、location\n\n配置网站中的路由信息，[详细，看这里！](https://learn-anything.cn/nginx-location)\n\n---\n\n##### 三、其他属性及变量\n\n###### 1、error_page\n\n通过 `error_page`  可以设置错误页面的路由， `server`  和  `location`  模块中都可以设置。\n\n```\nserver {\n    listen 80;\n    error_page  404  /website_page_not_found.html;\n    ...\n    location /my_blog {\n    \terror_page 500 502 503 504 = /server_error.html\n\t\t}\n}\n```\n\n```\n# 其他使用案例\nerror_page 404             /404.html;\nerror_page 500 502 503 504 /50x.html;\nerror_page 404 =200 /empty.gif;\nerror_page 403      http://example.com/forbidden.html;\nerror_page 404 =301 http://example.com/notfound.html;\n\nlocation / {\n    error_page 404 = @fallback;\n}\nlocation @fallback {\n    proxy_pass http://backend;\n}\n```\n\n- [error_page  -  官方文档](http://nginx.org/en/docs/http/ngx_http_core_module.html#error_page)\n\n---\n\n###### 2、try_files\n\n按照顺序逐一匹配，成功就返回。最后一个参数不能为空，因为前面都匹配失败时，用它进行内部重定向。\n\n```\n# 示例1\nlocation /images/ {\n    try_files $uri /images/default.gif;\n}\n\nlocation = /images/default.gif {\n    expires 30s;\n}\n```\n\n```\n# 示例2\nlocation / {\n    try_files /system/maintenance.html\n              $uri $uri/index.html $uri.html\n              @mongrel;\n}\n\nlocation @mongrel {\n    proxy_pass http://mongrel;\n}\n```\n\n- [try_files  -  官方文档](http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files)\n\n---\n\n###### 3、`$uri` `$args` `$query_string`\n\n```\n$args ：当前请求中的参数；\n$query_string ：等同于 $args；\n$uri  ：当前请求的 URI\n```\n\n---\n\n###### 4、default_server\n\n表示默认服务器，如果 `www.example.com`  也指向这台服务器，那么会用下面第二个 server 来响应。\n\n```\nserver {\n    listen      80;\n    server_name example.org www.example.org;\n    ...\n}\n\nserver {\n    listen      80 default_server;\n    server_name example.net www.example.net;\n    ...\n}\n```\n\n- [request_processing  -  官方文档](http://nginx.org/en/docs/http/request_processing.html)\n\n---\n\n##### 四、常见配置错误\n\n###### 1、return\n\n只能返回 return 所在域的情况。对于 `/a/test.html`  的请求，实例1返回 301，实例2返回404，体会其中域的范围。\n\n```\n# 实例1\nserver {\n    location /a/ {\n        try_files test.html =404;\n    }\n\n    return 301 http://example.org;\n}\n```\n\n```\n# 实例2\nserver {\n    location /a/ {\n        try_files test.html =404;\n    }\n\n    location / {\n        return 301 http://example.org;\n    }\n}\n```\n\n- [config_pitfalls  -  官方文档](https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/)\n\n---\n\n###### 2、`root` \n\n在 server 域中定义 root，如有需要再用 location 中 root 来覆盖，推荐下面这种 root 使用方式。\n\n```\nserver {\n    server_name www.example.com;\n    root /var/www/nginx-default/;\n    location / {\n        # [...]\n    }\n    location /foo {\n        # [...]\n    }\n    location /bar {\n        root /some/other/place;\n        # [...]\n    }\n}\n```\n\n---\n\n###### 3、`index`\n\n在 http 域中定义 index，这样所有 server 都继承使用 index，推荐下面这种使用方式。\n\n```\nhttp {\n    index index.php index.htm index.html;\n    server {\n        server_name www.example.com;\n        location / {\n            # [...]\n        }\n    }\n    server {\n        server_name example.com;\n        location / {\n            # [...]\n        }\n        location /foo {\n            # [...]\n        }\n    }\n}\n```\n\n---\n\n##### 五、参考文档\n\n- [Nginx  -  官方文档](http://nginx.org/en/docs/)\n- [Nginx 内置变量  -  官方文档](http://nginx.org/en/docs/varindex.html)\n\n- [ngx_http_core_module  -  官方文档](http://nginx.org/en/docs/http/ngx_http_core_module.html)\n\n- [ngx_http_proxy_module  -  官方文档](https://nginx.org/en/docs/http/ngx_http_proxy_module.html)\n\n- [Full Example Configuration  -  官方](https://www.nginx.com/resources/wiki/start/topics/examples/full/)\n- [Another Full Example  -  官方](https://www.nginx.com/resources/wiki/start/topics/examples/fullexample2/)\n- [nginx  -  start  -  官方文档](https://www.nginx.com/resources/wiki/start/index.html)\n\n- [nginx-caching-guide  -  官方](https://www.nginx.com/blog/nginx-caching-guide/)\n- [nginx-setup-intro](https://www.runoob.com/w3cnote/nginx-setup-intro.html)\n- [Nginx 服务器安装及配置文件详解](https://www.runoob.com/w3cnote/nginx-install-and-config.html)\n\n\n","url":"https://learn-anything.cn/nginx-conf","author":null,"published_at":"2021-12-03T11:12:46.000Z","tags":[{"name":"Nginx","slug":"nginx"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解Nginx中的配置信息！","slug":"nginx-conf"}},
    "staticQueryHashes": ["63159454"]}