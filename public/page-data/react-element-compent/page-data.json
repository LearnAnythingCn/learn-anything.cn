{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/react-element-compent",
    "result": {"data":{"strapiArticles":{"id":"Articles_104","title":"React的元素和组件用法详解！","description":"React中元素和组件是什么？函数组件和class组件分别是什么？怎样动态构建组件？","content":"##### 一、元素\n\nReact  的最小单位是元素，一旦创建，其子元素、属性等都无法更改。\n\n```jsx\n// 假设  HTML  文件中有个元素：\n<div id=\"root\"></div>\n\n// 创建element元素，传递给React渲染，并加载到父容器(id=root)下\nconst element = <h1>Hello, world</h1>;\nReactDOM.render(element, document.getElementById('root'));\n```\n\n---\n\n##### 二、组件\n\n组件是有多个元素组成，可以分为  `class组件` 和  `函数组件`  。\n\n###### 1、class组件\n\n```js\n// class组件\nclass Welcome extends React.Component {\n    render() {\n        return <h1>Hello, {this.props.name}</h1>;\n    }\n}\n```\n\n###### 2、函数组件\n\n```jsx\n// 普通函数 写 函数组件\nfunction Welcome(props) {\n    return <h1>Hello, {props.name}</h1>;\n}\n\n// 箭头函数 写 函数组件\nconst Welcome = (props) => {\n    return <h1>Hello, {props.name}</h1>;\n}\n```\n\n###### 3、组件复用\n\n```jsx\n// 组件App多次复用Welcome\nfunction Welcome(props) {\n    return <h1>Hello, {props.name}</h1>;\n}\n\nfunction App() {\n    return (\n        <div>\n            <Welcome name=\"Sara\" />\n            <Welcome name=\"Cahal\" />\n            <Welcome name=\"Edite\" />\n        </div>\n    );\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n```\n\n###### 4、动态构建组件\n\n根据条件，创建不同组件。\n\n```js\nfunction Greeting(props) {\n    const isLoggedIn = props.isLoggedIn;\n    if (isLoggedIn) {\n        return <UserGreeting />;\n    }\n    return <GuestGreeting />;\n}\n\nReactDOM.render(\n    // Try changing to isLoggedIn={true}:\n    <Greeting isLoggedIn={false} />,\n    document.getElementById('root')\n);\n```\n\n###### 5、map遍历构建元素\n\n```js\n// 用数组动态构建组件\nfunction NumberList(props) {\n    const numbers = props.numbers;\n    const listItems = numbers.map((number) =>\n        <li key={number.toString()}>\n            {number}\n        </li>\n    );\n    return (\n        <ul>{listItems}</ul>\n    );\n}\n\nconst numbers = [1, 2, 3, 4, 5];\nReactDOM.render(\n    <NumberList numbers={numbers} />,\n    document.getElementById('root')\n);\n```\n\n---\n\n##### 三、组件的属性及方法\n\n详情，[看这里!](https://learn-anything.cn/react-class-compent)\n\n---\n\n##### 四、参考链接：\n\n- [组件 - 官方](https://zh-hans.reactjs.org/docs/components-and-props.html)\n\n\n","url":"https://learn-anything.cn/react-element-compent","author":null,"published_at":"2021-10-08T05:08:10.000Z","tags":[{"name":"React","slug":"react"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"React的元素和组件用法详解！","slug":"react-element-compent"}},
    "staticQueryHashes": ["63159454"]}