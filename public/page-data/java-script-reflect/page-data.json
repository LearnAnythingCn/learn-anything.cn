{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-reflect",
    "result": {"data":{"strapiArticles":{"id":"Articles_519","title":"详解JavaScript的Reflect对象","description":"Reflect 对象，不是函数，也不能用new操作，它所有属性和方法都是静态的。可以对目标对象进行一些操作，譬如：调用一个函数，对构造函数进行new操作、获取对象的属性值等。","content":"##### 一、Reflect\n\nReflect 对象，不是函数，也不能用new操作，它所有属性和方法都是静态的。可以对目标对象进行一些操作，譬如：调用一个函数，对构造函数进行new操作、获取对象的属性值等。\n\n---\n\n##### 二、怎么用？\n\n###### 1、检查对象属性是否存在？\n\n```js\nconst duck = {\n  name: 'Maurice',\n  color: 'white',\n  greeting: function() {\n    console.log(`Quaaaack! My name is ${this.name}`);\n  }\n}\n\nReflect.has(duck, 'color');\n// true\nReflect.has(duck, 'haircut');\n// false\n```\n\n###### 2、返回对象自身属性\n\n```js\nconst duck = {\n  name: 'Maurice',\n  color: 'white',\n  greeting: function() {\n    console.log(`Quaaaack! My name is ${this.name}`);\n  }\n}\n\nReflect.ownKeys(duck);\n// [ \"name\", \"color\", \"greeting\" ]\n```\n\n###### 3、新增属性\n\n```js\nReflect.set(duck, 'eyes', 'black');\n// returns \"true\" if successful\n// \"duck\" now contains the property \"eyes: 'black'\"\n```\n\n---\n\n##### 三、参考文档\n\n- [Reflect  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Reflect)\n\n\n","url":"https://learn-anything.cn/java-script-reflect","author":null,"published_at":"2021-12-23T06:28:57.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"详解JavaScript的Reflect对象","slug":"java-script-reflect"}},
    "staticQueryHashes": ["63159454"]}