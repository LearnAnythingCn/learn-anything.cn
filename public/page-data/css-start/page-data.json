{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/css-start",
    "result": {"data":{"strapiArticles":{"id":"Articles_450","title":"学习CSS，从这里开始！","description":"层叠样式表（Cascading  Style  Sheet，简称：CSS），通过调整元素的大小、颜色、位置等，让整个网页更炫酷。","content":"##### 一、CSS 是什么？\n\n层叠样式表（Cascading  Style  Sheet，简称：CSS），通过调整元素的大小、颜色、位置等，让整个网页更炫酷。\n\n---\n\n##### 二、HTML中使用CSS的方法？\n\n新建下面两个文件（index.html 和 style.css），放在同一个目录下，用浏览器打开 `index.html`，查看效果。\n\n```HTML\n<!-- index.html -->\n<!DOCTYPE html>\n<html lang='zh-CN'>\n\n<head>\n    <meta charset=\"utf-8\">\n    <title>CSS 不同使用方法</title>\n\n    <link rel=\"stylesheet\" href=\"style.css\">\n\n    <style>\n        p {\n            color: red;\n        }\n    </style>\n</head>\n\n<body>\n    <h1>CSS 不同使用方法</h1>\n\n    <h4>方法一：</h4>\n    <p>采用 style 标签改变颜色。</p>\n    <hr>\n\n    <h4>方法二：</h4>\n    <p style=\"color: blue\"> 采用 style 属性改变颜色。 </p>\n    <hr>\n\n    <h4>方法三：推荐使用这种方式</h4>\n    <p class=\"ColorChange\">采用 link 标签改变颜色。</p>\n    <hr>\n\n</body>\n\n</html>\n```\n\n```CSS\n/* style.css */\n.ColorChange {\n    color: green;\n}\n```\n\n---\n\n##### 三、CSS 选择器\n\n选择器 是用来找出HTML页面中符合条件的元素，有如下几种方式：\n\n###### 1、常用实例\n\n- 常用选择元素的方法\n\n  ```css\n  /* 选择 <p> 元素 */\n  p {\n  }\n  \n  /* 多元素选择 */\n  p, li, h1 {\n    color: red;\n  }\n  \n  /* 选择 calss属性 为 my-class 的元素，譬如：<p class=\"my-class\"> */\n  .my-class{\n  }\n  \n  /* 选择 id属性 为 my-class 的元素，譬如：<p id=\"my-id\"> */\n  #my-id{\n  }\n  \n  /* 选择存在 src 属性的 img 元素 */\n  img[src]{\n  }\n  \n  /* 选择 存在href=\"https://example.com\" 属性的 a 元素 */\n  a[href=\"https://example.com\"] {\n  }\n  ```\n\n---\n\n###### 2、伪类、伪元素\n\n- 伪类语法格式：`:pseudo-class-name` ，如下 `:hover`  就是伪类。\n\n  ```css\n  /* 选择有 鼠标悬停的 a 元素 */\n  a:hover{\n  }\n  ```\n\n- 伪元素语法格式：`::pseudo-element-name`，如下 `::first-line`  就是伪元素。\n\n  ```css\n  /* 选择 article 元素下的 p元素的 第一行 */\n  article p::first-line {\n      font-size: 120%;\n      font-weight: bold;\n  } \n  ```\n\n- [更多可用伪类、伪元素，看这里！](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors/Pseudo-classes_and_pseudo-elements)\n\n---\n\n###### 3、后代元素\n\n- 使用 ` 空格`、`>`、`+`、`~`  这四个操作符来选择后代元素。\n\n  ```css\n  /* 选择body的子元素article 的所有子元素p */\n  body article p{\n  }\n  \n  /* 只选择 article 的第一个子元素p */\n  article > p{\n  }\n  \n  /* 选择 与p处于同级且相邻的 img元素 */\n  p + img{\n  }\n  \n  /* 选择 与p处于同级的 img元素（不一定要相邻） */\n  p ~ img{\n  }\n  ```\n\n---\n\n##### 四、CSS 布局\n\n浏览器对于 HTML 中的元素有一个默认排列显示的方式，称之为正常布局，当然也可以通过 CSS 来改变元素的排列方式，方法有这么几种：\n\n- [正常布局](https://learn-anything.cn/css-layout-normal)\n- [弹性布局(flex)](https://learn-anything.cn/css-flex)\n- [网格布局(grid)](https://learn-anything.cn/css-grid)\n- [浮动布局(float)](https://learn-anything.cn/css-float)\n- [定位布局(position)](https://learn-anything.cn/css-position)\n- [多列布局](https://learn-anything.cn/css-multi-col)\n\n---\n\n##### 五、CSS 可用属性\n\nCSS 可用属性及其详细说明，[详情，看这里！](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference)\n\n---\n\n##### 六、CSS 常见问题\n\n- [详情，看这里！](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Howto)\n\n---\n\n##### 七、参考文档\n\n- [CSS 教程  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/CSS)\n- [CSS 所有属性详解  -  MDN](https://developer.mozilla.org/zh-CN/docs/Web/CSS/Reference)\n- [CSS 基础知识  -  MDN](https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics)\n- [CSS  -  选择器(Selectors)  -  MDN](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors)\n\n- [CSS_layout  -  MDN](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout)\n\n- [CSS/CSS_layout - Introduction  -  MDN](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Introduction)\n\n- [CSS/Building_blocks  -  MDN](https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks)","url":"https://learn-anything.cn/css-start","author":null,"published_at":"2021-12-10T11:40:29.000Z","tags":[{"name":"CSS","slug":"css"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"学习CSS，从这里开始！","slug":"css-start"}},
    "staticQueryHashes": ["63159454"]}