{
    "componentChunkName": "component---src-templates-article-article-detail-gen-js",
    "path": "/java-script-spread-syntax",
    "result": {"data":{"strapiArticles":{"id":"Articles_99","title":"JavaScript展开语法详解！","description":"展开语法(Spread syntax)，是将数组、string或者（key-value）对象在语法层面展开，用在函数调用和数组构造时，关键字是：`...`  ","content":"##### 一、简介\n\n展开语法(Spread syntax)，是将数组、string或者（key-value）对象在语法层面展开，用在函数调用和数组构造时，关键字是：`...`  \n\n###### 1、数组\n\n```js\nfunction sum(x, y, z) {\n    return x + y + z;\n}\n\nconst numbers = [1, 2, 3];\n\nconsole.log(sum(...numbers));\n// 用上面的写法，代替下面\nconsole.log(sum(numbers[0], numbers[1], numbers[2]));\n\n// 输出结果: 6\n```\n\n###### 2、时间 - new\n\n```js\n// 在 new 表达式中应用\nvar dateFields = [1970, 0, 1]; // 1970年1月1日\nvar d = new Date(...dateFields);\n```\n\n###### 3、数组拷贝\n\n```js\n// 数组拷贝(copy)\nvar arr = [1, 2, 3];\nvar arr2 = [...arr]; // like arr.slice()\narr2.push(4);\n\n// arr2 此时变成 [1, 2, 3, 4]\n// arr 不受影响\n```\n\n###### 4、数组拼接\n\n```js\n// 正常写法：将 arr2 中所有元素附加到 arr1 后面并返回\nvar arr1 = [0, 1, 2];\nvar arr2 = [3, 4, 5];\nvar arr3 = arr1.concat(arr2);\n\n// 使用展开语法:\nvar arr1 = [0, 1, 2];\nvar arr2 = [3, 4, 5];\nvar arr3 = [...arr1, ...arr2];\n```\n\n###### 5、对象\n\n```js\n// 构造字面量对象时使用展开语法\nvar obj1 = { foo: 'bar', x: 42 };\nvar obj2 = { foo: 'baz', y: 13 };\n\nvar clonedObj = { ...obj1 };\n// 克隆后的对象: { foo: \"bar\", x: 42 }\n\nvar mergedObj = { ...obj1, ...obj2 };\n// 合并后的对象: { foo: \"baz\", x: 42, y: 13 }\n```\n\n---\n\n##### 二、参考链接：\n\n- [展开语法 - 详细说明](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Spread_syntax)","url":"https://learn-anything.cn/java-script-spread-syntax","author":null,"published_at":"2021-10-07T13:02:30.000Z","tags":[{"name":"JavaScript","slug":"java-script"}]},"site":{"siteMetadata":{"title":"收集优质资源","author":"@learn-anything.cn","description":"追求极简语言，说明事物因果！","email":"lh@learn-anything.cn"}}},"pageContext":{"title":"JavaScript展开语法详解！","slug":"java-script-spread-syntax"}},
    "staticQueryHashes": ["63159454"]}